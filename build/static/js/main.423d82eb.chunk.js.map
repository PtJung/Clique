{"version":3,"sources":["components/SessionResetModal/SessionResetModal.module.css","components/Room/VideoPicker/VideoPicker.module.css","components/SignUpWindow/SignUpWindow.module.css","Constants.js","components/Room/VideoPlayer/VideoPlayer.module.css","components/TWidgetBox/TWidgetBox.module.css","components/AboutBox/AboutBox.module.css","components/utils.js","components/Navbar/Navbar.jsx","components/TWidgetBox/CreateRoomButton/CreateRoomButton.jsx","components/TWidgetBox/JoinRoomModal/JoinRoomModal.jsx","components/TWidgetBox/TWidgetBox.jsx","components/AboutBox/AboutBox.jsx","components/SignUpWindow/SignUpWindow.jsx","components/LogInWindow/LogInWindow.jsx","components/SessionResetModal/SessionResetModal.jsx","components/TermsBox/TermsBox.jsx","components/Footer/Footer.jsx","components/Room/RoomNavbar/RoomNavbar.jsx","components/Room/VideoPicker/VideoCard/VideoCard.jsx","components/Room/VideoPicker/VideoPicker.jsx","components/Room/VideoPlayer/VideoPlayer.jsx","components/Room/RoomChatFooter/ChatBox/ChatMessage/ChatMessage.jsx","components/Room/RoomChatFooter/ChatBox/ChatBox.jsx","components/Room/RoomChatFooter/RoomChatFooter.jsx","components/Room/Room.jsx","App.js","index.js","components/LogInWindow/LogInWindow.module.css","components/Room/RoomNavbar/RoomNavbar.module.css","components/Room/VideoPlayer/VideoStates.js","components/Room/RoomChatFooter/ChatBox/ChatBox.module.css","components/TWidgetBox/JoinRoomModal/JoinRoomModal.module.css","components/Room/VideoPicker/VideoCard/VideoCard.module.css","components/TWidgetBox/CreateRoomButton/CreateRoomButton.module.css","components/Footer/Footer.module.css","components/Room/RoomChatFooter/ChatBox/ChatMessage/ChatMessage.module.css","components/Room/RoomChatFooter/RoomChatFooter.module.css","components/Room/Room.module.css","components/Navbar/Navbar.module.css","components/TermsBox/TermsBox.module.css"],"names":["module","exports","JOIN_ROOM","REQ_VIDEO","END_VIDEO","SET_VID","RESP_MSG","SEND_MSG","SET_MSGS","UPD_MSGS","GET_VTIME","SET_VTIME","NAV_VTIME","GET_USERS","SET_PLAY","SEND_NTCE","axios","get","process","then","res","data","catch","err","console","log","a","post","id","retrieved","exp","paramCode","paramId","code","payload","guestNameReal","guestNameDisp","guestId","roomCode","patch","dispName","guestName","Date","getTime","toString","Navbar","useState","userCaption","setUserCaption","buttonsReady","setButtonsReady","useEffect","utils","resSession","username","setupNavbar","className","cx","styles","navbar","navbarContainer","navLeft","href","unselectable","bIcon","src","height","alt","draggable","onContextMenu","e","preventDefault","navIconSeparator","Button","variant","capsule","bWebsite","navSeparator","navRight","style","padding","Dropdown","Toggle","sqButton","Menu","Item","onClick","window","location","reload","color","bLogin","bSignUp","delayed","NAME_INPUT_MESSAGES","PASS_INPUT_MESSAGES","USERS_INPUT_MESSAGES","handleInputName","nameInput","length","handleInputPass","passInput","test","handleInputUsers","usersInput","parseInt","CreateRoomButton","nameErrStatus","setNameErrStatus","passErrStatus","setPassErrStatus","usersErrStatus","setUsersErrStatus","setNameInput","setPassInput","setUsersInput","show","setShow","isUserLoggedIn","setIsUserLoggedIn","handleClose","$","unbind","on","pressedButton","this","attr","setTimeout","setupButton","createButton","disabled","title","Modal","onHide","animation","centered","Header","closeButton","Title","Form","Body","TextField","label","type","size","value","required","width","onChange","evt","target","error","helperText","formSeparator","InputProps","inputProps","min","max","Footer","inputNameTest","indexOf","inputPassTest","inputUsersTest","paramHost","paramHostId","_id","paramName","paramPassword","paramUserCap","pathname","isPassEnabled","passKey","JoinRoomModal","props","isRoomFull","rowData","userCountCurr","userCountMax","sessData","role","fontSize","fontWeight","data-dismiss","aria-label","aria-hidden","contentContainer","contentBox","display","float","modal","inputPassOK","chosenId","realName","swapRatioElements","x","y","xAsArray","split","map","num","yAsArray","updateRoomTable","isSuccessAlertOn","dataInJSON","undefined","hide","table","DataTable","clear","Object","keys","forEach","key","roomInJSON","row","add","draw","SuccessAPICallAlert","Alert","onClose","dismissible","FailedAPICallAlert","TWidgetBox","state","email","document","ready","noConflict","fn","dataTable","ext","oSort","order","language","emptyTable","columnDefs","targets","searchable","render","meta","lock","setupModalPerms","setState","css","widboxContainer","separatorTop","widgetDivider","roomNameCaption","captionSeparator","ButtonGroup","refreshButton","getElementById","outline","columnHeader","separatorBot","Component","AboutBox","aboutboxContainer","brand","separatorButtonTop","roomButton","textAlign","logoSeries","logo","EMAIL_INPUT_MESSAGES","EMAIL_VALIDATION_REGEX","isNameUnique","some","user","toUpperCase","isNameInRange","isNameWordChars","handleInputEmail","emailInput","isEmailUnique","isEmailEmptyErr","isEmailValid","getSessionPerm","SignUpWindow","emailErrStatus","setEmailErrStatus","passConfErrStatus","setPassConfErrStatus","setEmailInput","passConfInput","setPassConfInput","signUpWrap","signUpBox","iconContainer","iconHelper","iconTextContainer","icon","formWrapper","formInput","formInputSeparator","formCheckSubContainer","checkboxContainer","paddingLeft","termsCaption","open","origin","checkmark","signUpContainer","signUpButton","inputEmailTest","inputPassConfTest","termsChecked","checked","password","backButton","getAccountObj","identifier","accountObject","find","account","LogInWindow","showError","setShowError","identInput","setIdentInput","redirectOnLogin","logInWrap","logInBox","errorMessage","logInContainer","logInButton","inMemoryToken","renewSession","SessionResetModal","sessEmail","setSessEmail","sessTimer","modalElems","querySelectorAll","modalElem","parentNode","removeChild","modalBackdropElems","modalBackdropElem","setInterval","querySelector","clearInterval","deriveSessionEmail","keyboard","backdrop","renewalButton","TermsBox","termsboxContainer","footer","termsContainer","termsWrapper","termsAnchor","RoomNavbar","queryInput","setQueryInput","roomBar","roomBarContainer","roomBarContent","navCenter","barWrapper","barInputGroup","placeholder","searchForm","onKeyPress","which","keyCode","searchHandler","searchButton","VideoCard","Card","videoCard","clickHandler","videoId","videoName","Img","videoThumb","videoTitleWrapper","Text","videoTitleText","videoAuthorText","channelName","VideoPicker","videoCards","setVideoCards","handleCardClick","paramVideoId","updatedVideoCards","videoResults","videoResult","resVideoId","resVideoName","snippet","resChannelName","channelTitle","resVideoThumb","thumbnails","medium","url","push","videoPicker","VideoPlayer","playerTarget","useRef","playerState","setPlayerState","currVideoDuration","setCurrVideoDuration","maxVideoDuration","setMaxVideoDuration","intervalId","setIntervalId","volScroll","setVolScroll","currPlaying","setCurrPlaying","execOnStart","setExecOnStart","videoOptions","playerVars","protocol","host","enablejsapi","disablekb","rel","controls","modestbranding","modifyPlayState","paramPlayState","playHandler","restartVideo","current","playVideo","padStart","paramString","paramChar","paramMaxLen","charCount","encodeAsDigitTime","paramSeconds","periodScale","encodedTime","timeUseZeros","maxInterval","reduce","b","intervalScale","remainSeconds","timeThisScale","join","handleVolumeKnobDrag","volumeKnobNode","volumeBarNode","volumeBarProps","getBoundingClientRect","posAdjustment","Math","clientX","left","setVolume","handleStateChange","newPlayerState","V_PLAY","currVideoTime","getCurrentTime","timeHandler","getDuration","pauseVideo","V_PAUSE","V_END","endObserver","V_BUFFER","V_CUE","V_UNSTARTED","userCount","fallbackNoStart","getPlayerState","seekTo","startTime","offsetExecTime","setLoop","isPlaying","paramDuration","skipTime","videoWrapper","opts","onReady","handleFrameReady","onStateChange","controlsBar","timeNavBar","timeNavRefProps","currentTarget","newCurrDuration","right","skipHandler","handleTimeNavClick","ProgressBar","progressBar","now","playButton","playerWidget","paddingBottom","volumeWidget","volumeButton","volumeIcon","volumeScrollBarWrapper","volumeScrollBarBg","volumeScrollBar","onMouseDown","volumeScrollBarKnob","onDrag","onDragEnd","timeCaption","fullScreenButton","getIframe","requestFullscreen","ChatMessage","content","setContent","trim","substring","chatMsgBox","backgroundColor","notice","chatMsgHeader","senderDisp","senderReal","senderIsOwner","chatMsgTimestamp","timestamp","intvl","chatMsgContent","paramMessage","messageArr","paramMessageArr","partInd","formatBold","ChatBox","setDispName","setRealName","ownerPriv","setOwnerPriv","chatInput","setChatInput","handleSend","handleSendMsg","msgBoxNode","scrollTop","scrollHeight","sendToBottom","msgList","userMetadata","isOwner","chatBox","chatRoomContainer","msgBoxContainer","paramObjArr","chatNodeList","chatObj","newNode","renderObjsAsNodes","msgWidgContainer","chatForm","sendButtonWrapper","sendButton","RoomChatFooter","showChat","setShowChat","chatBar","chatBarContainer","chatToggleIcon","paramSenderDisp","paramSenderReal","paramSenderIsOwner","paramContent","Room","roomSocket","setStartTime","setSkipTime","setCurrVideoTime","roomUserCount","setRoomUserCount","setOffsetExecTime","roomVideo","setRoomVideo","setUserMetadata","setPlayVideo","isUserAllowed","setIsUserAllowed","setVideoResults","setMsgList","appendMsgNode","paramNode","paramMsgList","newMsgList","shift","concat","emit","onbeforeunload","close","handleNavbarInput","paramQueryInput","urlExtractor","createElement","inputHostnameParts","hostname","inputQueryParameters","queryString","parse","search","urlChecker","includes","v","img","Image","onload","query","getYTQuerySearch","params","q","maxResults","part","videoEmbeddable","items","searchResultsArr","handleSocket","useCallback","socket","creds","userId","resUserObject","roomId","msgContent","endTime","respVideo","respVideoTime","newTime","newMsgTime","newMsgNode","getHours","getMinutes","getSeconds","sendMessage","currMsgList","newNoticeNode","sendNotice","room","match","io","off","resRoomSession","foundRoomCode","foundSessId","setupRoom","videoPlayerWrapper","videoPlayer","paramCurrVideoTime","paramPlayVideo","paramSkipTime","paramEndTime","pickerContainer","scrollTo","MainWrapper","exact","path","ReactDOM","StrictMode"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,cAAgB,2C,oBCAlCD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,WAAa,iCAAiC,UAAY,gCAAgC,cAAgB,oCAAoC,WAAa,iCAAiC,KAAO,2BAA2B,kBAAoB,wCAAwC,YAAc,kCAAkC,mBAAqB,yCAAyC,UAAY,gCAAgC,sBAAwB,4CAA4C,kBAAoB,wCAAwC,gBAAkB,sCAAsC,aAAe,mCAAmC,WAAa,iCAAiC,aAAe,qC,mGCD/xBD,EAAOC,QAAU,CACbC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,QAAS,UACTC,SAAU,WACVC,SAAU,WACVC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,c,mBCbff,EAAOC,QAAU,CAAC,aAAe,kCAAkC,aAAe,kCAAkC,YAAc,iCAAiC,WAAa,gCAAgC,YAAc,iCAAiC,aAAe,kCAAkC,WAAa,gCAAgC,aAAe,kCAAkC,aAAe,kCAAkC,WAAa,gCAAgC,uBAAyB,4CAA4C,gBAAkB,qCAAqC,kBAAoB,uCAAuC,oBAAsB,yCAAyC,YAAc,iCAAiC,iBAAmB,wC,mBCApyBD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,aAAe,iCAAiC,gBAAkB,oCAAoC,aAAe,iCAAiC,cAAgB,kCAAkC,aAAe,iCAAiC,aAAe,iCAAiC,iBAAmB,qCAAqC,cAAgB,kCAAkC,gBAAkB,oCAAoC,eAAiB,mCAAmC,cAAgB,kCAAkC,KAAO,yBAAyB,aAAe,iCAAiC,gBAAkB,sC,mBCAxsBD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,kBAAoB,oCAAoC,aAAe,+BAA+B,MAAQ,wBAAwB,mBAAqB,qCAAqC,WAAa,6BAA6B,WAAa,6BAA6B,KAAO,yB,6NCiH5U,EA3GU,WACrB,OAAOe,IAAMC,IAAIC,mCACZC,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,GACHC,QAAQC,IAAI,eAAiBF,OAqG1B,EA5FU,WACrB,OAAOP,IAAMC,IAAIC,mCACZC,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,GACHC,QAAQC,IAAI,eAAiBF,OAsF1B,EA7EI,WACf,OAAOP,IAAMC,IAAIC,+CACZC,KADE,+BAAAO,EAAA,MACG,WAAON,GAAP,eAAAM,EAAA,sEACoBV,IAAMW,KAAKT,gDAA4D,CAACU,GAAIR,EAAIC,KAAKO,KADzG,cACEC,EADF,QAEYR,MAAQD,IAClBS,EAAUR,KAAKS,IAAMV,EAAIC,KAAKS,KAHhC,kBAKKD,GALL,2CADH,uDAQFP,OAAM,SAAAC,GACHC,QAAQC,IAAI,eAAiBF,OAmE1B,EAxDW,SAACQ,EAAWC,GAClC,OAAOhB,IAAMW,KAAKT,kDAA8D,CAACe,KAAMF,EAAWH,GAAII,IACjGb,KADE,+BAAAO,EAAA,MACG,WAAON,GAAP,eAAAM,EAAA,sEACkBV,IAAMW,KAAKT,mDAD7B,cACEgB,EADF,yBAEKA,GAFL,2CADH,uDAKFZ,OAAM,SAAAC,GACHC,QAAQC,IAAI,eAAiBF,OAiD1B,EApCK,SAACY,EAAeC,EAAeC,EAASC,GACxD,OAAOtB,IAAMuB,MAAMrB,wCAAoD,CAACsB,SAAUJ,EAAeE,SAAUA,EAAUG,UAAWN,EAAeE,QAASA,IACnJlB,MAAK,SAACC,GACH,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,GACHC,QAAQC,IAAI,eAAiBF,OA8B1B,EAJK,WAChB,MAAO,KAAO,IAAImB,MAAQC,UAAUC,SAAS,K,gBCXlCC,MA7Ff,WAAmB,IAAD,EACwBC,mBAAS,IADjC,mBACPC,EADO,KACMC,EADN,OAE0BF,oBAAS,GAFnC,mBAEPG,EAFO,KAEOC,EAFP,KAed,OAXAC,qBAAU,WAAM,4CACZ,4BAAAzB,EAAA,sEAC2B0B,IAD3B,QACQC,EADR,SAEsBA,EAAWhC,MACzB2B,EAAeK,EAAWhC,KAAKiC,UAEnCJ,GAAgB,GALpB,4CADY,uBAAC,WAAD,wBAQZK,MAKA,yBAAKC,UAAWC,IAAG,kEAAmEC,IAAOC,SACzF,yBAAK/B,GAAG,kBAAkB4B,UAAWE,IAAOE,iBACxC,yBAAKJ,UAAWE,IAAOG,SACnB,uBAAGC,KAAK,IAAIN,UAAWE,IAAOK,cAC1B,0BAAMP,UAAWE,IAAOM,OACpB,yBAAKC,IAAI,aAAaT,UAAWE,IAAOK,aAAcG,OAAO,KAAKC,IAAI,SACtEC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,sBAGzD,0BAAMf,UAAWE,IAAOc,mBACxB,kBAACC,EAAA,EAAD,CAAQX,KAAK,IAAIY,QAAQ,QAAQlB,UAAWC,IAAGC,IAAOiB,QAASjB,IAAOK,aAAcL,IAAOkB,WAA3F,QAGA,0BAAMpB,UAAWE,IAAOmB,eACxB,kBAACJ,EAAA,EAAD,CAAQX,KAAK,SAASY,QAAQ,QAAQlB,UAAWC,IAAGC,IAAOiB,QAASjB,IAAOK,aAAcL,IAAOkB,WAAhG,UAKJ,yBAAKpB,UAAWE,IAAOoB,UACjB7B,EAOF,oCACMF,EAWF,oCACI,0BAAMS,UAAWE,IAAOK,cACnBhB,GAEL,0BAAMgC,MAAO,CAACC,QAAS,WACvB,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAASC,OAAV,CAAiBR,QAAQ,QAAQlB,UAAWC,IAAGC,IAAOyB,SAAUzB,IAAOK,eAAvE,UAIA,kBAACkB,EAAA,EAASG,KAAV,KACI,kBAACH,EAAA,EAASI,KAAV,CAAeC,QAAO,sBAAE,sBAAA5D,EAAA,sEACdV,IAAMW,KAAKT,8CADG,OAEpBqE,OAAOC,SAASC,SAFI,4CAAxB,YAMA,kBAACR,EAAA,EAASI,KAAV,CAAeN,MAAO,CAACW,MAAO,QAASJ,QAAO,sBAAE,sBAAA5D,EAAA,sEACtCV,IAAMW,KAAKT,yCAAqD,CAACoC,SAAUP,IADrC,uBAEtC/B,IAAMW,KAAKT,8CAF2B,OAG5CqE,OAAOC,SAASC,SAH4B,4CAAhD,qBA3BZ,oCACI,kBAAChB,EAAA,EAAD,CAAQX,KAAK,SAASY,QAAQ,kBAAkBlB,UAAWC,IAAGC,IAAOiB,QAASjB,IAAOK,aAAcL,IAAOiC,SAA1G,UAGA,0BAAMnC,UAAWE,IAAOmB,eACxB,kBAACJ,EAAA,EAAD,CAAQX,KAAK,UAAUY,QAAQ,UAAUlB,UAAWC,IAAGC,IAAOiB,QAASjB,IAAOK,aAAcL,IAAOkC,UAAnG,aAbR,oCACI,yBAAKpC,UAAWC,IAAGC,IAAOiB,QAASjB,IAAOK,aAAcL,IAAOmC,WAC/D,0BAAMrC,UAAWE,IAAOmB,eACxB,yBAAKrB,UAAWC,IAAGC,IAAOiB,QAASjB,IAAOK,aAAcL,IAAOmC,gB,8GC7BjFC,EAAsB,CAAC,6BAA8B,gCAAiC,+BACtFC,EAAsB,CAAC,iCAAkC,mCACzDC,EAAuB,CAAC,8BAAD,0BALR,EAKQ,gBAJR,GAIQ,MAG7B,SAASC,EAAgBC,GAIrB,MAAO,CAHeA,EAAUC,OAAS,EACpBD,EAAUC,OAAS,IAClB,GAI1B,SAASC,EAAgBC,GAGrB,MAAO,CAFcA,EAAUF,OAAS,KACtB,iBAAiBG,KAAKD,IAI5C,SAASE,EAAiBC,GAGtB,MAAO,EAFc,QAAQF,KAAKE,GACTC,SAASD,GAtBjB,IADA,EAuBgEC,SAASD,IAsI/EE,MAlHf,WAA6B,IAAD,EACkB5D,oBAAU,GAD5B,mBACjB6D,EADiB,KACFC,EADE,OAEkB9D,oBAAU,GAF5B,mBAEjB+D,EAFiB,KAEFC,EAFE,OAGoBhE,oBAAU,GAH9B,mBAGjBiE,EAHiB,KAGDC,EAHC,OAKUlE,mBAAS,IALnB,mBAKjBoD,EALiB,KAKNe,EALM,OAMUnE,mBAAS,IANnB,mBAMjBuD,EANiB,KAMNa,EANM,OAOYpE,mBAAS,MAPrB,mBAOjB0D,EAPiB,KAOLW,EAPK,OASArE,oBAAS,GATT,mBASjBsE,EATiB,KASXC,EATW,OAUoBvE,oBAAS,GAV7B,mBAUjBwE,EAViB,KAUDC,EAVC,KAYlBC,EAAc,WAChBZ,GAAkB,GAClBE,GAAkB,GAClBE,GAAmB,GAEnBC,EAAa,IACbC,EAAa,IACbC,EAAc,MAEdE,GAAQ,IAwBZ,OApBAlE,qBAAU,WAAM,4CACZ,4BAAAzB,EAAA,sEAC2B0B,IAD3B,QACQC,EADR,SAEsBA,EAAWhC,MACzBkG,GAAkB,GAItBE,IAAE,iBAAiBC,OA7EL,SA8EdD,IAAE,iBAAiBE,GA9EL,SA8E2B,WACrC,IAAIC,EAAgBH,IAAEI,MACtBD,EAAcE,KAAK,YAAY,GAC/BvC,OAAOwC,YAAW,WACdH,EAAcE,KAAK,YAAY,KAChC,QAbX,4CADY,uBAAC,WAAD,wBAiBZE,MAIA,oCACI,kBAACvD,EAAA,EAAD,CAAQC,QAAQ,eAAeY,QAxBpB,kBAAM+B,GAAQ,IAwB2B7D,UAAWC,IAAGC,IAAOK,aAAcL,IAAOuE,cAC5FC,UAAWZ,EAAgBa,MAAQb,EAAoC,GArF5D,wCAoFb,UAKA,kBAACc,EAAA,EAAD,CAAOxG,GAAG,kBAAkBwF,KAAMA,EAAMiB,OAAQb,EAAac,WAAW,EAAOC,UAAQ,GACnF,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,qBAIJ,kBAACC,EAAA,EAAD,KACI,kBAACP,EAAA,EAAMQ,KAAP,KACQ,kBAACC,EAAA,EAAD,CAAWjH,GAAG,eAAekH,MAAM,YAAYC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQC,MAAO/C,EAAWgD,UAAQ,EAACnE,MAAO,CAACoE,MAAO,OACrIC,SAAU,SAACC,GAAD,OAASpC,EAAaoC,EAAIC,OAAOL,QAC3CM,MAAO5C,GAAiB,EACxB6C,WAAa7C,GAAiB,EAAKb,EAAoBa,GAAiB,MAExE,yBAAKnD,UAAWE,IAAO+F,gBACvB,kBAACZ,EAAA,EAAD,CAAWjH,GAAG,eAAekH,MAAM,WAAWC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQC,MAAO5C,EAAWtB,MAAO,CAACoE,MAAO,OAC3HC,SAAU,SAACC,GAAD,OAASnC,EAAamC,EAAIC,OAAOL,QAC3CM,MAAO1C,GAAiB,EACxB2C,WAAa3C,GAAiB,EAAKd,EAAoBc,GAAiB,MAExE,yBAAKrD,UAAWE,IAAO+F,gBACvB,kBAACZ,EAAA,EAAD,CAAWjH,GAAG,eAAekH,MAAM,WAAWC,KAAK,SAASrE,QAAQ,WAAWsE,KAAK,QAAQC,MAAOzC,EAAY0C,UAAQ,EACvHE,SAAU,SAACC,GAAD,OAASlC,EAAckC,EAAIC,OAAOL,QAC5CM,MAAOxC,GAAkB,EACzByC,WAAazC,GAAkB,EAAKf,EAAqBe,GAA7C,mCAtHnB,EAsHmB,gBArHnB,IAsHO2C,WAAY,CAACC,WAAY,CAACC,IAvHjC,EAuHoDC,IAtHpD,QAyHD,kBAACzB,EAAA,EAAM0B,OAAP,KACI,kBAACrF,EAAA,EAAD,CAAQC,QAAQ,YAAYY,QAASkC,GAArC,UAGA,kBAAC/C,EAAA,EAAD,CAAQ7C,GAAG,eAAe8C,QAAQ,UAAUqE,KAAK,SAASb,UAAWZ,EAAgBhC,QAAO,sBAAE,oCAAA5D,EAAA,yDACpFqI,EAAgB9D,EAAgBC,GAAW8D,SAAQ,GACnDC,EAAgB7D,EAAgBC,GAAW2D,SAAQ,GACnDE,EAAiB3D,EAAiBC,GAAYwD,SAAQ,GAEvDD,EAAgBE,EAAgBC,KAAqB,EALgC,iCAM7D9G,IAN6D,YAMhFC,EANgF,QAOvEhC,KAPuE,kCAnG/F8I,EA2GiD9G,EAAWhC,KAAKiC,SA3GtD8G,EA2GgE/G,EAAWhC,KAAKgJ,IA3GnEC,EA2GwEpE,EA3G7DqE,EA2GwElE,EA3GzDmE,EA2GoE/D,SAASD,GA1G3IxF,IAAMW,KAAKT,yCAAqD,CAC/D,KAAQiJ,EACR,OAAUC,EACV,KAAQE,EACR,SAAYC,EACZ,QAAWC,IAEdrJ,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,OAwFuG,aAQ5EW,EAR4E,0CAUxEkB,EAAwBlB,EAAQD,KAAMoB,EAAWhC,KAAKgJ,KAVkB,eAW9E9E,OAAOC,SAASiF,UAAhB,WAAgCvI,EAAQD,MAXsC,2BAclFsD,OAAOC,SAASC,SAdkE,QAiB1FmB,EAAiBmD,GACjBjD,EAAiBmD,GACjBjD,EAAkBkD,GAnBwE,kCAnGtH,IAAuBC,EAAWC,EAAaE,EAAWC,EAAeC,IAmG6C,QAA9F,e,iBCrIlB1E,G,OAAsB,CAAC,gCAAiC,gCAAiC,wCAK/F,SAASG,EAAgBC,GAIrB,MAAO,CAHeA,EAAUC,OAAS,EACpBD,EAAUC,OAAS,IAClB,GAI1B,SAASC,EAAgBsE,EAAerE,EAAWsE,GAC/C,OAASD,GAAiBrE,IAAcsE,EA0G7BC,MAvGf,SAAuBC,GAAQ,IAAD,EACgB/H,oBAAU,GAD1B,mBACnB6D,EADmB,KACJC,EADI,OAEgB9D,oBAAS,GAFzB,mBAEnB+D,EAFmB,KAEJC,EAFI,OAGQhE,mBAAS,IAHjB,mBAGnBoD,EAHmB,KAGRe,EAHQ,OAIQnE,mBAAS,IAJjB,mBAInBuD,EAJmB,KAIRa,EAJQ,KAKpB4D,EAAaD,EAAME,QAAQ,GAAGC,gBAAkBH,EAAME,QAAQ,GAAGE,aACjEP,EAAgBG,EAAME,QAAQ,GAAG5E,OAAS,EAC1C+E,EAAWL,EAAMK,SAwBvB,OAtBA/H,qBAAU,WAGNsE,IAAE,eAAeC,OA1BD,SA2BhBD,IAAE,eAAeE,GA3BD,SA2BqB,WACjC,IAAIC,EAAgBH,IAAEI,MACtBD,EAAcE,KAAK,YAAW,GAC9BvC,OAAOwC,YAAW,WACdH,EAAcE,KAAK,YAAW,KAC/B,QAIPL,IAAE,kBAAkBC,OAnCH,mBAoCjBD,IAAE,kBAAkBE,GApCH,mBAoCwB,SAAUrD,GAC/CsC,GAAkB,GAClBE,GAAiB,GACjBG,EAAa,IACbC,EAAa,UAKjB,yBAAK1D,UAAU,QAAQ5B,GAAG,iBACtB,yBAAK4B,UAAU,qCAAqC2H,KAAK,YACrD,yBAAK3H,UAAU,iBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cAAcuB,MAAO,CAACqG,SAAU,OAAQC,WAAY,QAAnE,aAGA,4BAAQtC,KAAK,SAASvF,UAAWC,IAAG,QAASC,IAAO+E,aAAc6C,eAAa,QAAQC,aAAW,SAC9F,0BAAMC,cAAY,QAAlB,UAKR,kBAAC7C,EAAA,EAAD,KACI,yBAAKnF,UAAWC,IAAG,gBAAiBC,IAAO+H,kBAAmB1G,MAAO,CAACC,QAAS,SAC3E,0BAAMxB,UAAWE,IAAOgI,YAChB,kBAAC7C,EAAA,EAAD,CAAWjH,GAAG,gBAAgBkH,MAAM,eAAeC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQC,MAAO/C,EAAWgD,UAAWgC,EAC5H9B,SAAU,SAACC,GAAD,OAASpC,EAAaoC,EAAIC,OAAOL,QAC3CM,MAAO5C,GAAiB,EACxB6C,WAAa7C,GAAiB,EAAKb,EAAoBa,GAAiB,MACxE,0BAAMnD,UAAWE,IAAO+F,gBACxB,kBAACZ,EAAA,EAAD,CAAWjH,GAAG,gBAAgBkH,MAAM,WAAWC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQC,MAAO5C,EAClGtB,MAAO,CAAC4G,QAASjB,EAAgB,eAAiB,OAAQkB,MAAO,SACjExC,SAAU,SAACC,GAAD,OAASnC,EAAamC,EAAIC,OAAOL,QAC3CM,MAAO1C,EACP2C,WAAY3C,EAxErB,kBAwE0D,OAEzD,yBAAKrD,UAAWE,IAAO+F,gBACvB,0BAAMjG,UAAWE,IAAOgI,YACpB,yBAAK3G,MAAO,CAACqG,SAAU,OAAQC,WAAY,QACvC,qCADJ,IACmBR,EAAME,QAAQ,GAC7B,6BACA,qCAHJ,IAGmBF,EAAME,QAAQ,GAC7B,6BACA,sCALJ,cAKuBF,EAAME,QAAQ,GAAGC,cALxC,YAKyDH,EAAME,QAAQ,GAAGE,iBAIlF,yBAAKzH,UAAU,gBACX,kBAACiB,EAAA,EAAD,CAAQC,QAAQ,YAAYY,QAAS,kBAAMmC,IAAE,kBAAkBoE,MAAM,UAArE,UAGA,kBAACpH,EAAA,EAAD,CAAQ7C,GAAG,aAAa8C,QAAQ,UAAUqE,KAAK,SAC7Cb,SAAU4C,EACV3C,MAAO2C,EAAa,qBAAuB,GAC3CxF,QAAO,sBAAE,oCAAA5D,EAAA,yDACDqI,EAAgB9D,EAAgBC,GAAW8D,SAAQ,GACnD8B,EAAc1F,EAAgBsE,EAAerE,EAAWwE,EAAME,QAAQ,OAEpD,IAAnBhB,GAA2C,IAAlBA,GAAuBmB,KAAcY,EAJ5D,wBAKGC,EAAWlB,EAAMK,SAAWL,EAAMK,SAASb,IAAMjH,IACjDZ,EAAW0D,EACX8F,EAAWnB,EAAMK,SAAWL,EAAMK,SAAS5H,SAAW,GAPzD,SAQGF,EAAkB4I,EAAUxJ,GAAYwJ,EAAUD,EAAUlB,EAAME,QAAQ,IAR7E,wBASG3H,EAAwByH,EAAME,QAAQ,GAAIgB,GAT7C,eAUHxG,OAAOC,SAASiF,UAAhB,WAAgCI,EAAME,QAAQ,IAV3C,2BAaPnE,EAAiBsE,GAA8B,IAAlBnB,GAAuB,EAAqBA,GACzEjD,GAAkBgF,GAdX,6CAHX,c,2BCrE5B,SAASG,GAAkBC,EAAGC,GAG1B,IAAMC,EAAWF,EAAEG,MAAM,KAAKC,KAAI,SAAUC,GACxC,OAAO9F,SAAS8F,EAAK,OAEnBC,EAAWL,EAAEE,MAAM,KAAKC,KAAI,SAAUC,GACpC,OAAO9F,SAAS8F,EAAK,OAI7B,OAAIH,EAAS,KAAOA,EAAS,IAEjB,EAEHI,EAAS,KAAOA,EAAS,GAEvB,EAEFA,EAAS,KAAOJ,EAAS,GAEvBI,EAAS,GAAKJ,EAAS,GAAK,GAAK,EAGrCI,EAAS,GAAKJ,EAAS,GAAK,GAAK,EAQ5C,SAASK,GAAgBC,GACrBtJ,IAAyBjC,MAAK,SAAAwL,GAG1B,QAAmBC,IAAfD,EAIA,OAHAlF,IAAE,uBAAuBL,OACzBK,IAAE,wBAAwBoF,YAC1B9E,YAAW,WAAYN,IAAE,uBAAuBoF,SArDrC,KAwDNH,IACLjF,IAAE,wBAAwBL,OAC1BW,YAAW,WAAYN,IAAE,wBAAwBoF,SA1DtC,MA4DfpF,IAAE,uBAAuBoF,OAGzB,IAAIC,EAAQrF,IAAE,cAAcsF,YAAYC,QAIxCC,OAAOC,KAAKP,GAAYQ,SAAQ,SAAAC,GAC5B,IAAIC,EAAaV,EAAWS,QAEAR,IAAxBS,EAAU,OAEVP,EAAMQ,IAAIC,IAAI,CACVF,EAAU,SACVA,EAAU,SACV,CAAC,cAAiBA,EAAU,MAAUlH,OAAQ,aAAgBkH,EAAU,UACxEA,EAAU,SACVA,EAAU,WAGlBP,EAAMU,KAAK,eAKvB,IAAMC,GAAsB,WACxB,OACI,kBAACC,EAAA,EAAD,CAAO9L,GAAG,sBAAsB8C,QAAQ,UAAUK,MAAO,CAAC4G,QAAS,QAASgC,QAAS,kBAAMlG,IAAE,wBAAwBoF,QAAQe,aAAW,GACpI,uBAAGpK,UAAWE,KAAOK,cAArB,qDAON8J,GAAqB,WACvB,OACI,kBAACH,EAAA,EAAD,CAAO9L,GAAG,qBAAqB8C,QAAQ,SAASK,MAAO,CAAC4G,QAAS,QAASgC,QAAS,kBAAMlG,IAAE,uBAAuBoF,QAAQe,aAAW,GACjI,uBAAGpK,UAAWE,KAAOK,cAArB,8EAqIG+J,G,kDA7HX,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IACDkD,MAAQ,CACThD,QAAS,CAAC,GAAI,GAAI,CAACC,cAAe,EAAGC,aAAc,GAAI,GAAI,IAC3DC,SAAU,CAACb,IAAK,GAAI/G,SAAU,GAAI0K,MAAO,GAAIlM,IAAK,IAJvC,E,gEAQE,IAAD,OAChB2F,IAAEwG,UAAUC,MAAZ,sBAAkB,8BAAAxM,EAAA,6DACd+F,IAAE0G,aAGF1G,IAAE2G,GAAGC,UAAUC,IAAIC,MAAM,iBAAmB,SAAUrC,EAAGC,GACrD,OAAQF,GAAkBC,EAAGC,IAEjC1E,IAAE2G,GAAGC,UAAUC,IAAIC,MAAM,kBAAoB,SAAUrC,EAAGC,GACtD,OAAOF,GAAkBC,EAAGC,IAI5BW,EAAQrF,IAAE,cAAcsF,UAAU,CAClCyB,MAAO,GACPC,SAAU,CACNC,WAAY,KAEhBC,WAAY,CAAC,CACTC,QAAS,CAAC,EAAG,EAAG,GAChBpL,UAAWE,KAAOK,cACnB,CACC6K,QAAS,EACTC,YAAY,EACZ9F,KAAM,YACN+F,OAAQ,SAAWzN,EAAM0H,EAAMuE,EAAKyB,GAChC,MAAM,GAAN,OAAU1N,EAAI,cAAd,YAAmCA,EAAI,gBAC3C,CACAuN,QAAS,EACTC,YAAY,EACZrL,UAAWE,KAAOsL,KAClBF,OAAQ,SAAWzN,EAAM0H,EAAMuE,EAAKyB,GAChC,MAAiB,KAAT1N,EAAe,GAAK,gJAGxCoL,IAAgB,GAGVwC,EArCQ,+BAAAvN,EAAA,MAqCU,4BAAAA,EAAA,sEACG0B,IADH,QAChBC,EADgB,SAEFA,EAAWhC,MACzB,EAAK6N,SAAS,CAACnE,QAAS,EAAKgD,MAAMhD,QAASG,SAAU7H,EAAWhC,OAHjD,2CArCV,8DA2CR4N,IA3CQ,OA+CdxH,IAAE,oBAAoBE,GAnKX,QAmK8B,MAAM,SAAC0B,GAC5C,IAAI0B,EAAU+B,EAAMQ,IAAIjE,EAAIC,QAAQjI,YACpBuL,IAAZ7B,IACA,EAAKmE,SAAS,CAACnE,QAASA,EAASG,SAAU,EAAK6C,MAAM7C,WACtDzD,IAAE,kBAAkBoE,MAAM,YAGlCpE,IAAE,oBAAoB0H,IAAI,SAAU,WAtDtB,+C,+BA2DlB,OAEI,yBAAKvN,GAAG,kBAAkB4B,UAAWE,KAAO0L,iBACxC,kBAAC,EAAD,CAAerE,QAASlD,KAAKkG,MAAMhD,QAASG,SAAUrD,KAAKkG,MAAM7C,WACjE,yBAAKnG,MAAO,CAACb,OAAQ,SACjB,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,yBAAKV,UAAWE,KAAO2L,eACvB,0BAAM7L,UAAWE,KAAO4L,eACpB,wBAAI9L,UAAWC,IAAGC,KAAOK,aAAcL,KAAO6L,kBAA9C,aAGA,yBAAK/L,UAAWE,KAAO8L,mBACvB,kBAACC,EAAA,EAAD,KACI,kBAAChL,EAAA,EAAD,CAAQC,QAAQ,eAAelB,UAAWC,IAAGC,KAAOK,aAAcL,KAAOgM,eAAgB9N,GAAG,qBAAqB0D,QAAS,WAEtHmH,IAAgB,GAEhB,IAAI7E,EAAgBqG,SAAS0B,eAAe,sBAC5C/H,EAAcM,UAAW,EACzB3C,OAAOwC,YAAW,WACdH,EAAcM,UAAW,IApMlC,OA6LC,WAYA,kBAAC,EAAD,QAGR,6BAEA,2BAAOtG,GAAG,YAAY4B,UAAU,gCAAgCuB,MAAO,CAACoE,MAAO,SAC3E,+BACI,wBAAIpE,MAAO,CAAC6K,QAAS,SACjB,wBAAI7K,MAAO,CAACoE,MAAO,OAAQ3F,UAAWE,KAAOmM,cAA7C,aAGA,wBAAI9K,MAAO,CAACoE,MAAO,OAAQ3F,UAAWE,KAAOmM,cAA7C,QAGA,wBAAI9K,MAAO,CAACoE,MAAO,OAAQ3F,UAAWE,KAAOmM,cAA7C,SAGA,wBAAI9K,MAAO,CAACoE,MAAO,OAAQ3F,UAAWE,KAAOmM,cAA7C,eAMZ,yBAAKrM,UAAWE,KAAOoM,oB,GAvHdC,a,oBC3EVC,G,uKAvCP,OACI,6BACI,yBAAKpO,GAAG,oBAAoB4B,UAAWE,KAAOuM,mBAC1C,yBAAKzM,UAAWE,KAAO2L,cACnB,yBAAKpL,IAAI,kBAAkBT,UAAWC,IAAGC,KAAOK,aAAcL,KAAOwM,OAAQhM,OAAO,MAAMC,IAAI,SAC9FC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,qBAErD,yBAAKf,UAAWE,KAAOyM,oBACnB,kBAAC1L,EAAA,EAAD,CAAQX,KAAK,SAASY,QAAQ,eAAeN,UAAU,QAAQZ,UAAWC,IAAGC,KAAOK,aAAcL,KAAO0M,aAAzG,mBAIJ,6BACI,uBAAGrL,MAAO,CAACsL,UAAW,YAAtB,uHAEO,2CAFP,gIAKA,6BACA,uBAAGtL,MAAO,CAACsL,UAAW,YAAtB,8XAMA,6BACA,yBAAK7M,UAAWE,KAAO4M,YACnB,yBAAKrM,IAAI,oBAAoBT,UAAWC,IAAGC,KAAOK,aAAcL,KAAO6M,MAAQpM,IAAI,UAAUC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,oBAC9I,yBAAKN,IAAI,sBAAsBT,UAAWC,IAAGC,KAAOK,aAAcL,KAAO6M,MAAQpM,IAAI,YAAYC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,oBAClJ,yBAAKN,IAAI,kBAAkBT,UAAWC,IAAGC,KAAOK,aAAcL,KAAO6M,MAAQpM,IAAI,QAAQC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,oBAC1I,yBAAKN,IAAI,mBAAmBT,UAAWC,IAAGC,KAAOK,aAAcL,KAAO6M,MAAQpM,IAAI,SAASC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,4B,GAhCjJwL,a,oBCGjBjK,GAAsB,CAAC,kCAAmC,kCAAmC,yDAA0D,uEACvJ0K,GAAuB,CAAC,+BAAgC,0BAA2B,wBAEnFzK,GAAsB,CAAC,0DAA2D,mCAElF0K,GAAyB,mJ,SAEhBxK,G,iFAAf,WAA+BC,GAA/B,mBAAAxE,EAAA,6DACQgP,GAAe,EADvB,SAEUtN,IAAyBjC,MAAK,SAAAwL,GAChC+D,GAAiB/D,EAAWgE,MAAK,SAACC,GAAD,OAAUA,EAAKtN,SAASuN,gBAAkB3K,EAAU2K,oBAH7F,cAM0B,EAClBC,EAAiB,GAAK5K,EAAUC,QAAYD,EAAUC,QAAU,GAChE4K,EAAkB,QAAQzK,KAAKJ,GARvC,kBASW,EAAEwK,GAHa,GAGmBI,GAAgBC,IAT7D,4C,+BAaeC,G,iFAAf,WAAgCC,GAAhC,mBAAAvP,EAAA,6DACQwP,GAAgB,EADxB,SAEU9N,IAAyBjC,MAAK,SAAAwL,GAChCuE,GAAkBvE,EAAWgE,MAAK,SAACC,GAAD,OAAUA,EAAK5C,MAAM6C,gBAAkBI,EAAWJ,oBAH5F,cAMQM,EAAyC,IAAtBF,EAAW9K,OAC9BiL,EAAeX,GAAuBnK,KAAK2K,GAPnD,kBAQW,EAAEC,EAAeC,GAAkBC,IAR9C,4C,sBAWA,SAAShL,GAAgBC,GAGrB,MAAO,GAFc,GAAKA,EAAUF,QAAYE,EAAUF,QAAU,MAClD,iBAAiBG,KAAKD,IAe5C,SAASgL,GAAerD,GACpB,OAAOhN,IAAMW,KAAKT,8CAA0D,CACpE,MAAS8M,EACT,YAAc,IAEjB7M,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,OAgHA+P,OA3Gf,WAAyB,IAAD,EACsBxO,oBAAU,GADhC,mBACb6D,EADa,KACEC,EADF,OAEsB9D,oBAAU,GAFhC,mBAEb+D,EAFa,KAEEC,EAFF,OAGwBhE,oBAAU,GAHlC,mBAGbyO,EAHa,KAGGC,EAHH,OAI8B1O,oBAAS,GAJvC,mBAIb2O,EAJa,KAIMC,EAJN,OAMc5O,mBAAS,IANvB,mBAMboD,EANa,KAMFe,EANE,OAOcnE,mBAAS,IAPvB,mBAObuD,EAPa,KAOFa,EAPE,OAQgBpE,mBAAS,IARzB,mBAQbmO,EARa,KAQDU,EARC,OASsB7O,mBAAS,IAT/B,mBASb8O,EATa,KASEC,EATF,KAepB,OACI,yBAAKrO,UAAWE,KAAOoO,YACnB,yBAAKtO,UAAWC,IAAG,GAAIC,KAAOqO,YAC1B,yBAAKvO,UAAWE,KAAOsO,eACnB,0BAAMxO,UAAWE,KAAOuO,aACxB,0BAAMzO,UAAWC,IAAGC,KAAOwO,kBAAmBxO,KAAOK,eACjD,yBAAKE,IAAI,aAAaT,UAAWE,KAAOyO,KAAMjO,OAAO,KAAKC,IAAI,SAC1DC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,oBACrD,uBAAGQ,MAAO,CAACqG,SAAU,SAArB,kBAMR,yBAAKrG,MAAO,CAACC,QAAS,UACtB,yBAAKxB,UAAWE,KAAO0O,aACnB,kBAACzJ,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWjH,GAAG,oBAAoB4B,UAAWE,KAAO2O,UAAWvJ,MAAM,WAAWC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQE,UAAQ,EAACD,MAAO/C,EAC1IkD,SAAU,SAACC,GAAD,OAASpC,EAAaoC,EAAIC,OAAOL,QAC3CM,MAAO5C,GAAiB,EACxB6C,WAAa7C,GAAiB,EAAKb,GAAoBa,GAAiB,MAE1E,yBAAKnD,UAAWE,KAAO4O,qBACvB,kBAACzJ,EAAA,EAAD,CAAWjH,GAAG,iBAAiB4B,UAAWE,KAAO2O,UAAWvJ,MAAM,QAAQC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQE,UAAQ,EAACD,MAAOgI,EACpI7H,SAAU,SAACC,GAAD,OAASsI,EAActI,EAAIC,OAAOL,QAC5CM,MAAOgI,GAAkB,EACzB/H,WAAa+H,GAAkB,EAAKf,GAAqBe,GApGrD,mDAsGN,yBAAK/N,UAAWE,KAAO4O,qBACvB,kBAACzJ,EAAA,EAAD,CAAWjH,GAAG,oBAAoB4B,UAAWE,KAAO2O,UAAWvJ,MAAM,WAAWC,KAAK,WAAWrE,QAAQ,WAAWsE,KAAK,QAAQE,UAAQ,EAACD,MAAO5C,EAC9I+C,SAAU,SAACC,GAAD,OAASnC,EAAamC,EAAIC,OAAOL,QAC3CM,MAAO1C,GAAiB,EACxB2C,WAAa3C,GAAiB,EAAKd,GAAoBc,GAAiB,MAE1E,yBAAKrD,UAAWE,KAAO4O,qBACvB,kBAACzJ,EAAA,EAAD,CAAWjH,GAAG,wBAAwB4B,UAAWE,KAAO2O,UAAWvJ,MAAM,mBAAmBC,KAAK,WAAWrE,QAAQ,WAAWsE,KAAK,QAAQE,UAAQ,EAACD,MAAO2I,EAC1JxI,SAAU,SAACC,GAAD,OAASwI,EAAiBxI,EAAIC,OAAOL,QAC/CM,MAAOkI,EACPjI,WAAYiI,EA9GN,gDA8GoD,MAE5D,yBAAKjO,UAAWE,KAAO4O,qBACvB,yBAAK9O,UAAWE,KAAO6O,uBACnB,2BAAO/O,UAAWC,IAAG,YAAaC,KAAO8O,mBAAoBzN,MAAO,CAAC0N,YAAa,QAC9E,2BAAO7Q,GAAG,gBAAgBmH,KAAK,aADnC,gDAGoC,0BAAMvF,UAAWE,KAAOgP,aAAcpN,QAAS,WAhDvGC,OAAOoN,KAAKpN,OAAOC,SAASoN,OAAS,YAgDuF,gDAHxG,IAII,0BAAMpP,UAAWE,KAAOmP,cAGhC,yBAAKrP,UAAWE,KAAO4O,qBACvB,yBAAK9O,UAAWE,KAAOoP,iBACnB,kBAACrO,EAAA,EAAD,CAAQC,QAAQ,UAAUlB,UAAWE,KAAOqP,aAAczN,QAAO,sBAAE,oCAAA5D,EAAA,6DAC3DqI,GAAiB,EAD0C,SAEzD9D,GAAgBC,GACb/E,MAAK,SAACC,GAAD,OAAS2I,EAAgB3I,EAAI4I,SAAQ,MAC1C1I,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAJ2B,cAK3DyR,GAAkB,EALyC,SAMzDhC,GAAiBC,GACd9P,MAAK,SAACC,GAAD,OAAS4R,EAAiB5R,EAAI4I,SAAQ,MAC3C1I,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAR2B,UASzD0I,EAAgB7D,GAAgBC,GAAW2D,SAAQ,GACnDiJ,EAAqB5M,IAAcuL,EACnCsB,EAAejF,SAAS0B,eAAe,iBAAiBwD,QAExDpJ,EAAgBiJ,EAAiB/I,KAAoB,GAAOgJ,IAAqBC,EAbxB,kCA1FnE5P,EAwGiC4C,EAxGvB8H,EAwGkCiD,EAxG3BmC,EAwGuC/M,OAvGhFrF,IAAMW,KAAKT,sCAAkD,CACzD,SAAYoC,EACZ,SAAY8P,EACZ,MAASpF,IAEV1M,OAAM,SAAAC,OAoFkF,eAe3DwG,WAAU,sBAAC,sBAAArG,EAAA,sEACD2P,GAAeJ,GADd,OAEP1L,OAAOC,SAAS1B,KAAO,SAFhB,2CAGR,GAlBwD,2BAqB/D8C,EAAiBmD,GACjByH,EAAkBwB,GAClBlM,EAAiBmD,GACjByH,EAAqBuB,GAxB0C,kCA1F/F,IAA4B3P,EAAU0K,EAAOoF,IA0FkD,QAAnE,WA4BA,kBAAC3O,EAAA,EAAD,CAAQC,QAAQ,YAAYlB,UAAWE,KAAO2P,WAAY/N,QAAS,WAC/DC,OAAOC,SAAS1B,KAAO,WAD3B,c,6BCvJbwP,G,iFAAf,WAA6BC,GAA7B,eAAA7R,EAAA,sEAEU0B,IAAyBjC,MAAK,SAAAwL,GAChC6G,EAAgB7G,EAAW8G,MAAK,SAAAC,GAAO,OAClCA,EAAQpQ,SAASuN,gBAAkB0C,EAAW1C,eAC9C6C,EAAQ1F,QAAUuF,EAAW1C,oBAL1C,gCAOW2C,GAPX,4C,sBAqGeG,OA7Ef,WAAwB,IAAD,EACe7Q,oBAAS,GADxB,mBACZ8Q,EADY,KACDC,EADC,OAEiB/Q,mBAAS,IAF1B,mBAEZgR,EAFY,KAEAC,EAFA,OAGejR,mBAAS,IAHxB,mBAGZuD,EAHY,KAGDa,EAHC,KA0BnB,OArBA/D,qBAAU,WAAM,4CACZ,4BAAAzB,EAAA,sEAC2B0B,IAD3B,QACQC,EADR,SAEsBA,EAAWhC,OAASuS,IAElCrO,OAAOC,SAAS1B,KAAO,UAJ/B,4CADY,uBAAC,WAAD,wBAQZkQ,GAGAvM,IAAE,gBAAgBC,OA1CD,SA2CjBD,IAAE,gBAAgBE,GA3CD,SA2CsB,WACnC,IAAIC,EAAgBH,IAAEI,MACtBD,EAAcE,KAAK,YAAW,GAC9BvC,OAAOwC,YAAW,WACdH,EAAcE,KAAK,YAAW,KAC/B,WAKP,yBAAKlG,GAAG,SAAS4B,UAAWE,KAAOuQ,WAC/B,yBAAKzQ,UAAWE,KAAOwQ,UACnB,yBAAK1Q,UAAWE,KAAOsO,eACnB,0BAAMxO,UAAWE,KAAOuO,aACxB,0BAAMzO,UAAWC,IAAGC,KAAOwO,kBAAmBxO,KAAOK,eACjD,yBAAKE,IAAI,aAAaT,UAAWE,KAAOyO,KAAMjO,OAAO,KAAKC,IAAI,SAC1DC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,oBACrD,uBAAGQ,MAAO,CAACqG,SAAU,SAArB,iBAMR,yBAAKrG,MAAO,CAACb,OAAQ,UACrB,yBAAKV,UAAWE,KAAOyQ,cAClBP,EArEM,2EAqE2B,KAEtC,yBAAKpQ,UAAWE,KAAO0O,aACnB,kBAACzJ,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAWjH,GAAG,sBAAsB4B,UAAWE,KAAO2O,UAAWvJ,MAAM,mBAAmBC,KAAK,OAAOrE,QAAQ,WAAWsE,KAAK,QAAQE,UAAQ,EAACD,MAAO6K,EACpJ1K,SAAU,SAACC,GAAD,OAAS0K,EAAc1K,EAAIC,OAAOL,UAC9C,yBAAKzF,UAAWE,KAAO4O,qBACvB,kBAACzJ,EAAA,EAAD,CAAWjH,GAAG,oBAAoB4B,UAAWE,KAAO2O,UAAWvJ,MAAM,WAAWC,KAAK,WAAWrE,QAAQ,WAAWsE,KAAK,QAAQE,UAAQ,EAACD,MAAO5C,EAC9I+C,SAAU,SAACC,GAAD,OAASnC,EAAamC,EAAIC,OAAOL,UAC7C,yBAAKzF,UAAWE,KAAO4O,qBACvB,yBAAK9O,UAAWE,KAAO0Q,gBACnB,kBAAC3P,EAAA,EAAD,CAAQ7C,GAAG,cAAc8C,QAAQ,UAAUqE,KAAK,SAASvF,UAAWE,KAAO2Q,YAAa/O,QAAO,sBAAE,8BAAA5D,EAAA,6DAGzF4S,GAAgB,EAHyE,SAInEhB,GAAcQ,GAJqD,eAKvElH,KADlB4G,EAJyF,wCAnErGxF,EA0EiDwF,EAAcxF,MA1ExDoF,EA0E+D/M,EAzEnFrF,IAAMW,KAAKT,8CAA0D,CACpE,MAAS8M,EACT,SAAYoF,EACZ,YAAc,IAEjBjS,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,OA0D8G,OAOzF+S,EAPyF,cAW7FT,OAAgCjH,IAAlB4G,IAAkCc,GAChDpN,EAAa,IAZgF,kCAnE7H,IAAwB8G,EAAOoF,IAmE8F,QAAjG,gB,8BClF5B,SAASmB,GAAavG,GAClB,OAAOhN,IAAMW,KAAKT,8CAA0D,CACpE,MAAS8M,EACT,YAAc,IAEjB7M,MAAK,SAAAC,GACF,OAAOA,EAAIC,QAEdC,OAAM,SAAAC,OAwEAiT,OAnEf,WAA8B,IAAD,EACD1R,oBAAS,GADR,mBAClBsE,EADkB,KACZC,EADY,OAESvE,mBAAS,IAFlB,mBAElB2R,EAFkB,KAEPC,EAFO,KA2CzB,OAvCAvR,qBAAU,WAAM,4CACZ,8BAAAzB,EAAA,sEAC2B0B,IAD3B,QACQC,EADR,SAEsBA,EAAWhC,OAGrBgC,EAAWhC,KAAK2M,QAChB0G,EAAarR,EAAWhC,KAAK2M,OAC7BuG,GAAalR,EAAWhC,KAAK2M,QAE7B3K,EAAWhC,KAAKS,MAEZ6S,EAAY5M,YAAW,WAEvB,IAF6B,EAEzB6M,EAAa3G,SAAS4G,iBAAiB,UAFd,eAGPD,GAHO,IAG7B,2BAAkC,CAAC,IAA1BE,EAAyB,QAC9BA,EAAUC,WAAWC,YAAYF,IAJR,8BAM7B,IAN6B,EAMzBG,EAAqBhH,SAAS4G,iBAAiB,wBANtB,eAOCI,GAPD,IAO7B,2BAAkD,CAAC,IAA1CC,EAAyC,QAC9CA,EAAkBH,WAAWC,YAAYE,IARhB,8BAU7B7N,GAAQ,GAGR8N,aAAY,WACR,IAAID,EAAoBjH,SAASmH,cAAc,mBAC1CF,IAAqBA,EAAkBnQ,MAAM4G,SAAuD,WAA3ClE,IAAEyN,GAAmB/F,IAAI,eACnF5J,OAAOC,SAASC,WAErB,KACH4P,cAAcV,KACfzT,SA/Bf,4CADY,uBAAC,WAAD,wBAoCZoU,KACD,CAAClO,IAGA,kBAACgB,EAAA,EAAD,CAAOxG,GAAG,oBAAoBwF,KAAMA,EAAMiB,OAAQ,kBAAMhB,GAAQ,IAAQiB,WAAW,EAAOiN,UAAU,EAAOC,SAAS,SAASjN,UAAQ,GACjI,kBAACH,EAAA,EAAMI,OAAP,KACI,kBAACJ,EAAA,EAAMM,MAAP,yBAIJ,kBAACN,EAAA,EAAMQ,KAAP,mDAEI,6BAAM,6BAFV,0CAKA,kBAACR,EAAA,EAAM0B,OAAP,KACI,kBAACrF,EAAA,EAAD,CAAQ7C,GAAG,gBAAgB4B,UAAWE,KAAO+R,cAAe/Q,QAAQ,UAAUY,QAAS,WACnFiP,GAAaE,GACblP,OAAOC,SAASC,WAFpB,S,oBCjCDiQ,G,uKArCP,OACI,6BACI,yBAAK9T,GAAG,oBAAoB4B,UAAWE,KAAOiS,mBAC1C,yBAAKnS,UAAWE,KAAO2L,cAAvB,oBAGA,6BACI,uBAAGtK,MAAO,CAACsL,UAAW,YAAtB,8BAEI,6BAAM,6BAFV,4PAOI,6BAAM,6BAPV,qTAYI,6BAAM,6BAZV,wKAeI,6BAAM,6BAfV,mb,GAVDN,a,oBCgBRjG,OAhBf,WACI,OACI,yBAAKtG,UAAWE,KAAOkS,QACnB,yBAAKpS,UAAWE,KAAOmS,gBACnB,yBAAKrS,UAAWE,KAAOoS,cAAvB,QAEI,uBAAGhS,KAAK,SAASN,UAAWE,KAAOqS,aAAnC,oBAFJ,Y,oBCmCDC,OAtCf,SAAoBnL,GAAQ,IAAD,EACa/H,mBAAS,IADtB,mBAChBmT,EADgB,KACJC,EADI,KAGvB,OACI,yBAAK1S,UAAWC,IAAG,kEAAmEC,KAAOyS,UACzF,yBAAKvU,GAAG,mBAAmB4B,UAAWE,KAAO0S,kBACzC,yBAAK5S,UAAWE,KAAO2S,gBACnB,yBAAK7S,UAAWE,KAAOG,SACnB,uBAAGC,KAAK,IAAIN,UAAWE,KAAOK,cAC1B,0BAAMP,UAAWE,KAAOM,OACpB,yBAAKC,IAAI,aAAaT,UAAWE,KAAOK,aAAcG,OAAO,KAAKC,IAAI,SACtEC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,uBAI7D,yBAAKf,UAAWC,IAAGC,KAAO4S,UAAW5S,KAAO6S,aACxC,yBAAK/S,UAAWC,IAAGC,KAAO8S,cAAe,+BACrC,2BAAOC,YAAY,SAASlL,aAAW,SAAS/H,UAAWC,IAAGC,KAAOgT,WAAY,gBAAiBC,WAAY,SAACtN,GACzF,KAAdA,EAAIuN,OAAgC,KAAhBvN,EAAIwN,SACxBhM,EAAMiM,cAAcb,IAG5B7M,SAAU,SAACC,GAAD,OAAS6M,EAAc7M,EAAIC,OAAOL,UAC5C,yBAAKzF,UAAW,sBACZ,4BAAQuF,KAAK,SAASvF,UAAWC,IAAGC,KAAOqT,aAAc,iBAAkBzR,QAAS,kBAAMuF,EAAMiM,cAAcb,KAC1G,yBAAKhS,IAAI,yBAAyBT,UAAWE,KAAOK,aAAcG,OAAO,KAAKC,IAAI,SAClFC,UAAU,QAAQC,cAAe,SAAUC,GAAIA,EAAEC,4B,8BCRtEyS,OAjBf,SAAmBnM,GAEf,OACI,kBAACoM,GAAA,EAAD,CAAMzT,UAAWC,IAAGC,KAAOwT,UAAWxT,KAAOK,cAAeuB,QAAS,kBAAMuF,EAAMsM,aAAatM,EAAMuM,UAAUjP,MAAO0C,EAAMwM,WACvH,kBAACJ,GAAA,EAAKK,IAAN,CAAU9T,UAAWE,KAAOK,aAAcW,QAAQ,MAAMT,IAAK4G,EAAM0M,aACnE,kBAACN,GAAA,EAAKrO,KAAN,CAAWpF,UAAWE,KAAO8T,mBACzB,kBAACP,GAAA,EAAKQ,KAAN,CAAWjU,UAAWE,KAAOgU,gBACxB7M,EAAMwM,YAGf,kBAACJ,GAAA,EAAKQ,KAAN,CAAWjU,UAAWE,KAAOiU,iBACxB9M,EAAM+M,e,qBC0BRC,OAtCf,SAAqBhN,GAAQ,IAAD,EACY/H,mBAAS,IADrB,mBACjBgV,EADiB,KACLC,EADK,KAGlBC,EAAkB,SAACC,GACrBpN,EAAMsM,aAAac,IA2BvB,OAxBA9U,qBAAU,WACN,IAAM+U,EAAoB,GAC1BrN,EAAMsN,aAAahL,SAAQ,SAAAiL,GACvB,IACI,IAAMC,EAAaD,EAAYxW,GAAGwV,QAC5BkB,EAAeF,EAAYG,QAAQpQ,MACnCqQ,EAAiBJ,EAAYG,QAAQE,aACrCC,EAAgBN,EAAYG,QAAQI,WAAWC,OAAOC,IAC5DX,EAAkBY,KACd,kBAAC,GAAD,CACE1L,IAAKiL,EACLjB,QAASiB,EACThB,UAAWiB,EACXV,YAAaY,EACbjB,WAAYmB,EACZvB,aAAca,KAIxB,MAAOzW,QAEXwW,EAAcG,KACf,CAACrN,EAAMsN,eAGN,wBAAI3U,UAAWE,KAAOqV,aACjBjB,I,iDCwNEkB,OAtPf,SAAqBnO,GACjB,IAAMoO,EAAeC,iBAAO,MADJ,EAEcpW,oBAAU,GAFxB,mBAEjBqW,EAFiB,KAEJC,EAFI,OAG0BtW,mBAAS,GAHnC,mBAGjBuW,EAHiB,KAGEC,EAHF,OAIwBxW,mBAAS,GAJjC,mBAIjByW,EAJiB,KAICC,EAJD,OAKY1W,mBAAS,GALrB,mBAKjB2W,EALiB,KAKLC,EALK,OAMU5W,oBAAS,GANnB,mBAMjB6W,EANiB,KAMNC,EANM,OAOc9W,oBAAS,GAPvB,mBAOjB+W,EAPiB,KAOJC,EAPI,OAQchX,oBAAS,GARvB,mBAQjBiX,EARiB,KAQJC,EARI,KAUuBC,EAA+C,CAC1F/V,OAAQ,MACRiF,MAAM,MACN+Q,WAAY,CACRtH,OAAO,GAAD,OAAKrN,OAAOC,SAAS2U,SAArB,aAAkC5U,OAAOC,SAAS4U,MACxDC,YAAa,EACbC,UAAW,EACXC,IAAK,EACLC,SAAU,EACVC,eAAgB,IAIlBC,EAAkB,SAACC,GACrBb,EAAea,GACf9P,EAAM+P,YAAYD,IAGhBE,EAAe,WACjBvB,EAAqB,GACrBoB,GAAgB,GAChBzB,EAAa6B,QAAQC,aAenBC,EAAW,SAACC,EAAaC,EAAWC,GAGtC,IADA,IAAInW,EAAU,GACLoW,EAAY,EAAGA,EAAaD,EAAcF,EAAY9U,OAASiV,IACpEpW,GAAWkW,EAEf,OAAOlW,EAAUiW,GAGfI,EAAoB,SAACC,GAA8C,IAAD,EAA/BC,EAA+B,uDAAjB,CAAC,GAAI,GAAI,IACxDC,EAAc,GACdC,GAAe,EACfC,EAAcH,EAAYI,QAAO,SAACja,EAAGka,GAAJ,OAAUla,EAAIka,KAHiB,eAI1CL,GAJ0C,IAIpE,2BAAuC,CAAC,IAA/BM,EAA8B,QAC7BC,EAAgBR,EAAeI,EAC/BK,EAAgBT,EAAeQ,EACjCL,EACAD,EAAY1C,KAAKkC,EAAS,GAAD,OAAIe,EAAgBL,GAAe,IAAK,IAE5DK,IACLN,GAAe,EACfD,EAAY1C,KAAZ,UAAoBiD,EAAgBL,KAExCJ,EAAeQ,EACfJ,GAAeG,GAfiD,8BAqBpE,OAJKL,EAAYrV,QACbqV,EAAY1C,KAAK,KAErB0C,EAAY1C,KAAKkC,EAAS,GAAD,QAAKM,EAAeA,EAAeI,GAAeA,GAAe,IAAK,IACxFF,EAAYQ,KAAK,MAiBtBC,EAAuB,SAAC5S,GAC1B,GAAI4P,EAAa6B,QAAS,CACtB,IAAMoB,EAAiBjO,SAASmH,cAAc,eACxC+G,EAAgBlO,SAASmH,cAAc,iBACvCgH,EAAiBD,EAAcE,wBAE/BC,EAAgBC,KAAK3S,IAAI2S,KAAK1S,IAAIR,EAAImT,QAAUJ,EAAeK,KAAM,GAzFnB,IA0FxDP,EAAenX,MAAM0X,KAArB,UAA+BH,EAAgB,EAA/C,MACAH,EAAcpX,MAAMoE,MAApB,UAA+BmT,EAA/B,MACArD,EAAa6B,QAAQ4B,UAAU,IAAMJ,EA5FmB,MAuG1DK,EAAoB,SAACtT,GACvB,IAAMuT,EAAiBvT,EAAIhI,KAG3B,OAAQub,GACJ,KAAKC,UACDnD,EApFDvE,aAAY,WACf,IAAM2H,EAAgB7D,EAAa6B,QAAQiC,iBAC3CzD,EAAqBwD,GACrBjS,EAAMmS,YAAYF,KACnB,MAiFKtD,EAAoBnQ,EAAIC,OAAO2T,eAC1BpD,GAEDxQ,EAAIC,OAAO4T,aAEf,MACJ,KAAKC,WACD9H,cAAcoE,GACVN,IAAgBiE,SAEhBvC,IAEKhB,GAELxQ,EAAIC,OAAOyR,YAEf,MACJ,KAAKqC,SACD/H,cAAcoE,GACdiB,GAAgB,GAChBpB,EAAqBC,GACrB1O,EAAMwS,YAAY9D,GAClB,MACJ,KAAK+D,YACDjI,cAAcoE,GACd,MACJ,KAAK8D,SACD,MACJ,KAAKC,eACD,GAAK3D,EAOD,GADAxQ,EAAIC,OAAOyR,YACPhB,GAAgBlP,EAAM4S,UAAY,EAElC,IAAMC,EAAkBvI,aAAY,WAC5B9L,EAAIC,OAAOqU,mBAAqBd,YAChCxT,EAAIC,OAAOsU,OAAO/S,EAAMgT,YAAc,IAAInb,MAAQC,UAAYkI,EAAMiT,gBAAkB,KAAM,GAC5F9D,GAAe,GACf3E,cAAcqI,MAEnB,UAEsB,IAApB7S,EAAM4S,WAEXzD,GAAe,QAjBnBa,IAqBJ,MACJ,QACI,OAGRxR,EAAIC,OAAOyU,SAAQ,GACnB3E,EAAewD,IA2BnB,OAxBAzZ,qBAAU,WACN2W,EAAejP,EAAMmT,aACtB,CAACnT,EAAMmT,YAEV7a,qBAAU,WAEF8V,EAAa6B,UACKjB,EAGdZ,EAAa6B,QAAQC,YAGrB9B,EAAa6B,QAAQoC,gBAG9B,CAACrD,IAEJ1W,qBAAU,WAxHS,IAAC8a,EAyHZpT,EAAMqT,WAzHMD,EA0HDpT,EAAMqT,SAxHrB7I,cAAcoE,GACdH,EAAqB2E,GACrBhF,EAAa6B,QAAQ8C,OAAOK,GAAe,MAwH5C,CAACpT,EAAMqT,WAGN,yBAAK1a,UAAWE,KAAOya,cACnB,kBAAC,KAAD,CACE/G,QAASvM,EAAMuM,QACfgH,KAAMnE,EACNoE,QAAS,SAAChV,GAAD,OAxGM,SAACA,GAEtB4P,EAAa6B,QAAUzR,EAAIC,OAC3BoR,GAAgB,GAqGQ4D,CAAiBjV,IACnCkV,cAAe,SAAClV,GAAD,OAASsT,EAAkBtT,MAE5C,yBAAK7F,UAAWC,IAAGC,KAAO8a,YAAa9a,KAAOK,eAC1C,yBAAKP,UAAWE,KAAO+a,WAAYnZ,QAAS,SAAC+D,GAAD,OAhI7B,SAACA,GACxB,IAAMqV,EAAkBrV,EAAIsV,cAActC,wBACpCuC,EAAkBrF,EAAmBgD,KAAK3S,IAAI2S,KAAK1S,KAAKR,EAAImT,QAAUkC,EAAgBjC,OAASiC,EAAgBG,MAAQH,EAAgBjC,MAAO,GAAI,GAExJ5R,EAAMiU,YAAYF,GA4H2CG,CAAmB1V,KACpE,kBAAC2V,GAAA,EAAD,CAAaxb,UAAWE,KAAOub,YAAava,QAAQ,SAASwa,IAAK7F,EAAmBxP,IAAK0P,KAE9F,4BAAQ/V,UAAWC,IAAGC,KAAOyb,WAAYzb,KAAO0b,cAAe9Z,QAAS,kBAAMoV,GAAiBb,IAC7F9U,MAAO,CAACqG,UAAWyO,EAAc,KAAO,MAAQ,KAAMwF,eAAgBxF,EAAc,IAAM,KAAO,OAC9FA,EAjN6D,eAAV,UAmNxD,yBAAKrW,UAAWE,KAAO4b,cACnB,4BAAQ9b,UAAWC,IAAGC,KAAO6b,aAAc7b,KAAO0b,cAAe9Z,QAAS,kBAAMsU,GAAcD,KAC1F,yBAAKnW,UAAWE,KAAO8b,WAAYrb,IAAI,SAASC,UAAU,QACxDC,cAAe,SAACgF,GAASA,EAAI9E,qBAEnC,yBAAKf,UAAWC,IAAGC,KAAO+b,uBAAwB/b,KAAO0b,cAAera,MAAO,CAAC4G,QAASgO,EAAY,QAAU,SAC3G,yBAAKnW,UAAWE,KAAOgc,oBACvB,yBAAK9d,GAAG,eAAe4B,UAAWE,KAAOic,gBACvCra,QAAS,SAAC+D,GAAD,OAAS4S,EAAqB5S,IAAMuW,YAAa,SAACvW,GAAD,OAAS4S,EAAqB5S,MAC1F,yBAAKzH,GAAG,aAAa4B,UAAWE,KAAOmc,oBAAqBzb,UAAU,OACpE0b,OAAQ,SAACzW,GAAD,OAAS4S,EAAqB5S,IACtC0W,UAAW,SAAC1W,GAAD,OAAS4S,EAAqB5S,QAGnD,yBAAK7F,UAAWC,IAAGC,KAAOsc,YAAatc,KAAO0b,eACzC/D,EAAkBhC,GADvB,MAC8CgC,EAAkB9B,IAEhE,4BAAQ/V,UAAWC,IAAGC,KAAOuc,iBAAkBvc,KAAO0b,cAAe9Z,QAAS,WAnMtF2T,EAAa6B,QAAQoF,YAAYC,sBAmMzB,a,oBCzLDC,OAzDf,SAAqBvV,GAAQ,IAAD,EACM/H,mBAAS,IADf,mBACjBud,EADiB,KACRC,EADQ,KAqCxB,OAJAnd,qBAAU,WACNmd,EAAWzV,EAAMwV,QAAQE,OAAOC,UAAU,EAhCnB,QAiCxB,CAAC3V,EAAMwV,UAGN,yBAAK7c,UAAWE,KAAO+c,WAAY1b,MAAO,CAAC2b,gBAAgB,GAAD,OAAK7V,EAAM8V,OAAS,UAAY,aACpF9V,EAAM8V,OAUR,8BATA,yBAAKnd,UAAWE,KAAOkd,eACnB,0BAAMzY,MAAK,UAAK0C,EAAMgW,YAAX,OAAwBhW,EAAMiW,WAAc,KAAOjW,EAAMiW,WAAa,IAAO,IAAM/b,MAAO,CAACW,MAAM,GAAD,OAAKmF,EAAMkW,cAAgB,OAAS,WAC1IlW,EAAMgW,YAEX,0BAAMrd,UAAWE,KAAOsd,kBACNnW,EAAMoW,UA/BZ3U,KAAI,SAAA4U,GAAK,OAVhB,SAACjG,EAAaC,EAAWC,GAGtC,IADA,IAAInW,EAAU,GACLoW,EAAY,EAAGA,EAAaD,EAAcF,EAAY9U,OAASiV,IACpEpW,GAAWkW,EAEf,OAAOlW,EAAUiW,EAIgBD,CAAS,GAAD,OAAIkG,GAAS,IAAK,MAAIlF,KAAK,OAoChE,yBAAKxY,UAAWE,KAAOyd,gBAClBtW,EAAM8V,OAlCA,SAACS,GAChB,IAAIC,EAAa,GACbC,GAAmB,IAAMF,GAAc/U,MAAM,KACjDiV,EAAgB,GAAKA,EAAgB,GAAGd,UAAU,GAElD,IAAK,IAAIe,EAAU,EAAGA,EAAUD,EAAgBnb,OAAQob,IAChDA,EAAU,IAAM,EAChBF,EAAWvI,KAAK,uBAAG1L,IAAKmU,GAAUD,EAAgBC,KAGlDF,EAAWvI,KAAK,0BAAM1L,IAAKmU,GAAUD,EAAgBC,KAG7D,OAAOF,EAqBiBG,CAAWnB,GAAWA,K,oBC+BvCoB,OAhFf,SAAiB5W,GAAQ,IAAD,EACY/H,mBAAS,IADrB,mBACbN,EADa,KACHkf,EADG,OAEY5e,mBAAS,IAFrB,mBAEbkJ,EAFa,KAEH2V,EAFG,OAGc7e,oBAAS,GAHvB,mBAGb8e,EAHa,KAGFC,EAHE,OAIc/e,mBAAS,IAJvB,mBAIbgf,EAJa,KAIFC,EAJE,KAgBdC,EAAa,WAEXF,IACAjX,EAAMoX,cAAczf,GAAY,YAAawJ,EAAU4V,EAAWE,GAClEC,EAAa,MA+BrB,OAVA5e,qBAAU,YAnCW,WACjB,IAAM+e,EAAajU,SAAS0B,eAAe,oBACvCuS,GAEAna,YAAW,WACPma,EAAWC,UAAYD,EAAWE,eACnC,GA8BPC,KACD,CAACxX,EAAMc,QAASd,EAAMyX,UAEzBnf,qBAAU,WACNue,EAAY7W,EAAM0X,aAAa/f,UAAYA,GAC3Cmf,EAAY9W,EAAM0X,aAAavW,UAAYA,GAC3C6V,EAAahX,EAAM0X,aAAaC,SAAWZ,KAC5C,CAAC/W,EAAM0X,eAGN,oCACK1X,EAAMc,QACP,yBAAKnI,UAAWE,KAAO+e,SACnB,yBAAKjf,UAAWE,KAAOgf,mBACnB,yBAAK9gB,GAAG,mBAAmB4B,UAAWE,KAAOif,iBAhCnC,SAACC,GACvB,IADuC,EACjCC,EAAe,GADkB,eAEnBD,GAFmB,IAEvC,2BAAiC,CAAC,IAAzBE,EAAwB,QACzBC,EAAU,GAGVA,EADAD,EAAQnC,OACE,kBAAC,GAAD,CAAaA,QAAQ,EAAMvT,IAAK0V,EAAQ1V,IAAKiT,QAASyC,EAAQzC,UAG9D,kBAAC,GAAD,CAAaM,QAAQ,EAAOvT,IAAK0V,EAAQ1V,IAAKiT,QAASyC,EAAQzC,QAASQ,WAAYiC,EAAQjC,WAAYC,WAAYgC,EAAQhC,WAAYC,cAAe+B,EAAQ/B,cAAeE,UAAW6B,EAAQ7B,YAG/M4B,EAAa/J,KAAKiK,IAZiB,8BAcvC,OAAOF,EAmBUG,CAAkBnY,EAAMyX,WAGjC,yBAAK9e,UAAWE,KAAOuf,kBACnB,2BAAOxM,YAAY,UAAUlL,aAAW,UAAU/H,UAAWC,IAAGC,KAAOwf,SAAU,gBAAiBvM,WAAY,SAACtN,GACzF,KAAdA,EAAIuN,OAAgC,KAAhBvN,EAAIwN,SACxBmL,KAGR5Y,SAAU,SAACC,GAAD,OAAS0Y,EAAa1Y,EAAIC,OAAOL,QAAQA,MAAO6Y,IAC1D,yBAAKte,UAAWC,IAAGC,KAAOyf,kBAAmB,uBACzC,4BAAQpa,KAAK,SAASvF,UAAWC,IAAGC,KAAO0f,WAAY,iBAAkB9d,QAAS,kBAAM0c,MAAxF,aAOZ,gC,oBCvDGqB,OApBf,SAAwBxY,GAAQ,IAAD,EACK/H,oBAAS,GADd,mBACpBwgB,EADoB,KACVC,EADU,KAO3B,OACI,oCACI,yBAAK/f,UAAWE,KAAO8f,SACnB,yBAAKhgB,UAAWE,KAAO+f,kBACnB,yBAAKjgB,UAAWC,IAAGC,KAAOggB,eAAgBhgB,KAAOK,cAAeI,IAAI,cAAcgE,MAAM,cACtF/D,UAAU,QAAQC,cAAe,SAACgF,GAASA,EAAI9E,kBAAmBe,QAAS,kBAAMie,GAAaD,MAChG,kBAAC,GAAD,CAAS3X,QAAS2X,EAAUf,aAAc1X,EAAM0X,aAAcD,QAASzX,EAAMyX,QAASL,cAVhF,SAAC0B,EAAiBC,EAAiBC,EAAoBC,GACzEjZ,EAAMoX,cAAc0B,EAAiBC,EAAiBC,EAAoBC,U,2FCsYnEC,OAhYf,SAAclZ,GAGV,IAAMmZ,EAAa9K,iBAAO,MAHT,EAIiBpW,mBAAS,GAJ1B,mBAIV+a,EAJU,KAICoG,EAJD,OAKenhB,mBAAS,GALxB,mBAKVob,EALU,KAKAgG,EALA,OAMyBphB,mBAAS,GANlC,mBAMVga,EANU,KAMKqH,EANL,OAOyBrhB,mBAAS,GAPlC,mBAOVshB,EAPU,KAOKC,EAPL,OAQ2BvhB,oBAAU,IAAIJ,MAAQC,WARjD,mBAQVmb,EARU,KAQMwG,EARN,OASiBxhB,mBAAS,IAT1B,mBASVyhB,EATU,KASCC,EATD,OAUuB1hB,mBAAS,IAVhC,mBAUVyf,EAVU,KAUIkC,EAVJ,OAWiB3hB,oBAAS,GAX1B,mBAWViY,EAXU,KAWC2J,EAXD,OAYyB5hB,oBAAS,GAZlC,mBAYV6hB,EAZU,KAYKC,EAZL,OAauB9hB,mBAAS,IAbhC,mBAaVqV,EAbU,KAaI0M,EAbJ,OAca/hB,mBAAS,IAdtB,mBAcVwf,EAdU,KAcDwC,EAdC,KAuDXC,EAAgB,SAACC,EAAWC,GAC9B,IAAIC,EAAaD,EACbC,EAAW/e,QAzCO,KA0ClB+e,EAAWC,QAEfD,EAAaA,EAAWE,OAAO,CAACJ,IAChChB,EAAWlJ,QAAQuK,KAAK5kB,YAAU,CAAEykB,WAAYA,IAChDJ,EAAWI,IAMf3f,OAAO+f,eAAiB,WACpBtB,EAAWlJ,QAAQyK,SAMvB,IAgDMC,EAAiB,uCAAG,WAAOC,GAAP,qBAAA/jB,EAAA,uDACtB+jB,EAAkBA,EAAgBlF,UAK1BmF,EAAezX,SAAS0X,cAAc,MAC7B7hB,KAAO2hB,EACdG,EAAqBF,EAAaG,SAASxZ,MAAM,KACjDyZ,EAAuBC,KAAYC,MAAMN,EAAaO,QAGxDC,KAAWT,IAAoBG,EAAmBO,SAAS,YAAcL,EAAqBM,IAE1FC,EAAM,IAAIC,OACVriB,IAAM,6BAA+B6hB,EAAqBM,EAAI,iBAClEC,EAAIE,OAAS,WACS,MAAdF,EAAIld,MAEJ6a,EAAWlJ,QAAQuK,KAAKllB,aAAW,CAAEqmB,MAAOV,EAAqBM,IAE5DN,EAAqBM,GAE1BK,GAAiBX,EAAqBM,KAM9CK,GAAiBhB,IAIrBZ,EAAgB,IAjCE,2CAAH,sDAwCjB4B,GAAgB,uCAAG,WAAOhB,GAAP,SAAA/jB,EAAA,sEACfV,IAAMC,IAAI,+CAAgD,CAC5DylB,OAAQ,CACJtZ,IAAKlM,0CACLylB,EAAGlB,EACHmB,WAAY,GACZC,KAAM,UACN9d,KAAM,QACN+d,gBAAiB,UAEpB3lB,MAAK,SAAAC,GACF,GAAIA,EAAIC,MAAQD,EAAIC,KAAK0lB,MAAO,CAC5B,IAAMC,EAAmB5lB,EAAIC,KAAK0lB,MAClClC,EAAgBmC,OAGvB1lB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAhBT,2CAAH,sDAsBhB0lB,GAAeC,uBAAY,SAACC,EAAQC,GACtCpD,EAAWlJ,QAAUqM,EAErBA,EAAOxf,GAAG,UAAV,sBAAqB,gCAAAjG,EAAA,6DAEjB4iB,GAAmB,IAAI5hB,MAAQC,WAE3BqJ,EAAW,GACXxJ,EAAW,GACXggB,GAAU,EANG,SAOXxhB,IAAMW,KAAKT,2CAAuD,CAACoB,SAAU8kB,EAAM9kB,SAAU+kB,OAAQD,EAAMC,SAC5GlmB,MAAK,SAAAmmB,GACEA,GAAiBA,EAAcjmB,OAC/B2K,EAAWsb,EAAcjmB,KAAK2K,SAC9BxJ,EAAW8kB,EAAcjmB,KAAKmB,SAC9BggB,EAAU8E,EAAcjmB,KAAKmhB,YAGpClhB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAfb,OAgBjBkjB,EAAgB,CAACzY,SAAUA,EAAUxJ,SAAUA,EAAUggB,QAASA,IAG9DhgB,GAEA2kB,EAAO9B,KAAKnlB,aAAW,CACnBqnB,OAAQH,EAAM9kB,SACd+kB,OAAQD,EAAMC,OACdrb,SAAUA,EACVxJ,SAAUA,EACVggB,QAASA,IAEb2E,EAAO9B,KAAKxkB,cACZsmB,EAAO9B,KAAKtkB,aAAW,CAAEymB,WAAW,IAAD,OAAMhlB,GAAYwJ,EAAY,KAAOA,EAAW,IAAO,IAAvD,6BAInCzG,OAAOC,SAASiF,SAAW,SAjCd,4CAqCrB0c,EAAOxf,GAAGvH,cAAW,SAACiB,GAClB6iB,EAAY7iB,EAAKomB,YAGrBN,EAAOxf,GAAGtH,YAAS,SAACgB,GACZA,EAAKqmB,WACLlD,EAAanjB,EAAKqmB,WAElBrmB,EAAKsmB,eACL1D,EAAa5iB,EAAKsmB,kBAI1BR,EAAOxf,GAAG9G,cAAW,SAACQ,GACdA,EAAKoc,WAEL4G,EAAiBhjB,EAAKoc,cAI9B0J,EAAOxf,GAAG7G,aAAU,SAACO,QACMuL,IAAnBvL,EAAK0Z,WACL2J,EAAarjB,EAAK0Z,cAI1BoM,EAAOxf,GAAG/G,cAAW,SAACS,QACGuL,IAAjBvL,EAAKumB,SAEL1D,EAAY7iB,EAAKumB,YAIzBT,EAAOxf,GAAGrH,aAAU,SAACe,OAIrB8lB,EAAOxf,GAAGpH,aAAU,SAACc,IAjPL,SAACsiB,EAAiBC,EAAiBC,EAAoBC,EAAcmB,GACrF,IAAM4C,EAAa,IAAInlB,KACjBolB,EAAa,CACfnH,QAAQ,EACRN,QAASyD,EACT1W,IAAKya,EAAWllB,UAChBke,WAAY8C,EACZ7C,WAAY8C,EACZ7C,cAAe8C,EACf5C,UAAW,CAAC4G,EAAWE,WAAYF,EAAWG,aAAcH,EAAWI,eAI3ElD,EAAc+C,EAAY7C,GAqOtBiD,CAAY7mB,EAAKwf,WAAYxf,EAAKyf,WAAYzf,EAAK0f,cAAe1f,EAAKmmB,WAAYnmB,EAAK8mB,gBAG5FhB,EAAOxf,GAAG5G,cAAW,SAACM,IAlOP,SAACyiB,EAAcmB,GAC9B,IACMmD,EAAgB,CAClBzH,QAAQ,EACRN,QAASyD,EACT1W,KAJkB,IAAI1K,MAIHC,WAIvBoiB,EAAcqD,EAAenD,GA0NzBoD,CAAWhnB,EAAKmmB,WAAYnmB,EAAK8mB,gBAGrChB,EAAOxf,GAAGnH,aAAU,SAACa,GACjByjB,EAAWzjB,EAAK8mB,YAAc9mB,EAAK8mB,YAAc,SAEtD,CAACtd,EAAMyd,KAAKC,MAAM7B,OAAOzkB,OA8E5B,OAzEAkB,qBAAU,WACDohB,GAGDC,EAAaR,EAAWlJ,QAAUkJ,EAAWlJ,QAAQ1D,QA3QpC,iBA6QtB,CAACmN,IAKJphB,qBAAU,YACS6gB,EAAWlJ,SAAW0N,KAAGtnB,0BAEjCmkB,KAAKzkB,aAAW,CACnBgnB,QAAS1J,MAEd,CAACA,IAKJ/a,qBAAU,WACN,IAAMgkB,EAASnD,EAAWlJ,SAAW0N,KAAGtnB,yBACxCimB,EAAOsB,IAAI/nB,cACXymB,EAAOxf,GAAGjH,cAAW,WAEjBymB,EAAO9B,KAAK1kB,aAAW,CACnBmc,cAAeA,SAGxB,CAACA,IAKJ3Z,qBAAU,YACS6gB,EAAWlJ,SAAW0N,KAAGtnB,0BACjCmkB,KAAKvkB,YAAU,CAClBia,UAAWA,MAEhB,CAACA,IAKJ5X,qBAAU,YAES,uCAAG,kCAAAzB,EAAA,sEAEeV,IAAMW,KAAKT,mDAF1B,UAERwnB,EAFQ,OAGRC,EAAgB9d,EAAMyd,KAAKC,MAAM7B,OAAOzkB,MAAQ,GACjDymB,EAAernB,MAASsnB,GAAkBD,EAAernB,KAAKiB,WAAaqmB,EAJlE,uBAKVpjB,OAAOC,SAAS1B,KAAO,IALb,0BAUR8kB,EAAcF,EAAernB,KAAKO,IAAM,GAIxCulB,EAASqB,KAAGtnB,0BAAkC8iB,EAAWlJ,QAC/DmM,GAAaE,EAAQ,CAAC7kB,SAAUqmB,EAAetB,OAAQuB,IACvDhE,GAAiB,GAhBH,4CAAH,qDAkBfiE,KAED,CAAC5B,GAAcpc,EAAMyd,KAAKC,MAAM7B,OAAOzkB,OAMtC,oCACK0iB,EACD,oCACI,kBAAC,GAAD,CAAY7N,cAAe0O,IAC3B,yBAAKhiB,UAAWE,KAAOolB,oBACnB,yBAAKtlB,UAAWE,KAAOqlB,aACnB,kBAAC,GAAD,CACE3R,QAASmN,EACTvG,UAAWjD,EACX+C,eAAgBA,EAChBD,UAAWA,EACXK,SAAUA,EACVT,UAAW2G,EACXpH,YAlSE,SAACgM,GAErB7E,EAAiB6E,IAiSCpO,YA3RE,SAACqO,GACrBvE,EAAauE,IA2RKnK,YArRE,SAACoK,GAErBhF,EAAYgF,IAoRM7L,YA9QC,SAAC8L,GACpBnF,EAAWlJ,QAAQuK,KAAKjlB,aAAW,CAC/BqnB,QAAS0B,SAgRL,yBAAK3lB,UAAWE,KAAO0lB,iBACnB,kBAAC,GAAD,CAAajR,aAAcA,EAAchB,aA1QjC,SAACc,GACrB+L,EAAWlJ,QAAQuK,KAAKllB,aAAW,CAAEqmB,MAAOvO,IAC5C1S,OAAO8jB,SAAS,EAAG,OA0QX,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAgB9G,aAAcA,EAAcD,QAASA,EAASL,cArQpD,SAAC0B,EAAiBC,EAAiBC,EAAoBC,GACzEE,EAAWlJ,QAAQuK,KAAK9kB,YAAU,CAAEsgB,WAAY8C,EAAiB7C,WAAY8C,EAAiB7C,cAAe8C,EAAoB2D,WAAY1D,EAAcqE,YAAa7F,QAuQpK,gCCnVGgH,OAhDf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI1a,OAAQ,kBAC1B,6BACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,UAGR,kBAAC,IAAD,CAAOya,OAAK,EAACC,KAAK,SAAS1a,OAAQ,kBAC/B,6BACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,UAGR,kBAAC,IAAD,CAAOya,OAAK,EAACC,KAAK,eAAe1a,OAAQ,SAACjE,GAAD,OACrC,6BACI,kBAAC,GAAD,CAAMyd,KAAMzd,QAGpB,kBAAC,IAAD,CAAO0e,OAAK,EAACC,KAAK,SAAS1a,OAAQ,kBAC/B,6BACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,UAGR,kBAAC,IAAD,CAAOya,OAAK,EAACC,KAAK,SAAS1a,OAAQ,kBAC/B,6BACI,kBAAC,GAAD,MACA,kBAAC,GAAD,UAGR,kBAAC,IAAD,CAAOya,OAAK,EAACC,KAAK,UAAU1a,OAAQ,kBAChC,6BACI,kBAAC,GAAD,MACA,kBAAC,GAAD,YC1CpB2a,IAAS3a,OACL,kBAAC,IAAM4a,WAAP,KACI,kBAAC,GAAD,OAEJzb,SAAS0B,eAAe,U,mBCR5B3P,EAAOC,QAAU,CAAC,aAAe,kCAAkC,UAAY,+BAA+B,SAAW,8BAA8B,cAAgB,mCAAmC,WAAa,gCAAgC,KAAO,0BAA0B,kBAAoB,uCAAuC,YAAc,iCAAiC,mBAAqB,wCAAwC,UAAY,+BAA+B,sBAAwB,2CAA2C,kBAAoB,uCAAuC,eAAiB,oCAAoC,YAAc,iCAAiC,aAAe,oC,mBCA3tBD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,iBAAmB,qCAAqC,eAAiB,mCAAmC,aAAe,iCAAiC,QAAU,4BAA4B,SAAW,6BAA6B,UAAY,8BAA8B,WAAa,+BAA+B,cAAgB,kCAAkC,WAAa,+BAA+B,aAAe,mC,iBCDreD,EAAOC,QAAU,CACbud,aAAc,EACdJ,MAAO,EACPP,OAAQ,EACRM,QAAS,EACTG,SAAU,EACVC,MAAO,I,mBCLXvd,EAAOC,QAAU,CAAC,QAAU,yBAAyB,kBAAoB,mCAAmC,gBAAkB,iCAAiC,iBAAmB,kCAAkC,SAAW,0BAA0B,kBAAoB,mCAAmC,WAAa,8B,mBCA7TD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,iBAAmB,wCAAwC,WAAa,kCAAkC,YAAc,qC,mBCA/LD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,UAAY,6BAA6B,kBAAoB,qCAAqC,eAAiB,kCAAkC,gBAAkB,qC,mBCAxOD,EAAOC,QAAU,CAAC,aAAe,uCAAuC,aAAe,uCAAuC,cAAgB,wCAAwC,YAAc,wC,mBCApMD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,+BAA+B,aAAe,6BAA6B,YAAc,8B,mBCA5JD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,cAAgB,mCAAmC,eAAiB,oCAAoC,iBAAmB,wC,mBCA1LD,EAAOC,QAAU,CAAC,aAAe,qCAAqC,QAAU,gCAAgC,iBAAmB,yCAAyC,eAAiB,yC,mBCA7LD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,mBAAqB,iCAAiC,gBAAkB,gC,kBCAlID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAkB,gCAAgC,iBAAmB,iCAAiC,aAAe,6BAA6B,aAAe,6BAA6B,QAAU,wBAAwB,SAAW,yBAAyB,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,wBAAwB,SAAW,yBAAyB,SAAW,yBAAyB,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,uBAAuB,QAAU,0B,mBCAxkBD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,kBAAoB,oCAAoC,aAAe,+BAA+B,WAAa,gC","file":"static/js/main.423d82eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"renewalButton\":\"SessionResetModal_renewalButton__1aXhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoPicker\":\"VideoPicker_videoPicker__8XEyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"SignUpWindow_unselectable__x1TZy\",\"signUpWrap\":\"SignUpWindow_signUpWrap__3JxGD\",\"signUpBox\":\"SignUpWindow_signUpBox__2sETQ\",\"iconContainer\":\"SignUpWindow_iconContainer__2sLoG\",\"iconHelper\":\"SignUpWindow_iconHelper__RkSod\",\"icon\":\"SignUpWindow_icon__3rXRU\",\"iconTextContainer\":\"SignUpWindow_iconTextContainer__9NfBV\",\"formWrapper\":\"SignUpWindow_formWrapper__27gxl\",\"formInputSeparator\":\"SignUpWindow_formInputSeparator__XVD28\",\"formInput\":\"SignUpWindow_formInput__2iyWm\",\"formCheckSubContainer\":\"SignUpWindow_formCheckSubContainer__YZEoU\",\"checkboxContainer\":\"SignUpWindow_checkboxContainer__29vPF\",\"signUpContainer\":\"SignUpWindow_signUpContainer__2qUfh\",\"signUpButton\":\"SignUpWindow_signUpButton__V_is2\",\"backButton\":\"SignUpWindow_backButton__1fCxI\",\"termsCaption\":\"SignUpWindow_termsCaption__EbUdQ\"};","module.exports = {\r\n    JOIN_ROOM: 'JOIN_ROOM',\r\n    REQ_VIDEO: 'REQ_VIDEO',\r\n    END_VIDEO: 'END_VIDEO',\r\n    SET_VID: 'SET_VID',\r\n    RESP_MSG: 'RESP_MSG',\r\n    SEND_MSG: 'SEND_MSG',\r\n    SET_MSGS: 'SET_MSGS',\r\n    UPD_MSGS: 'UPD_MSGS',\r\n    GET_VTIME: 'GET_VTIME',\r\n    SET_VTIME: 'SET_VTIME',\r\n    NAV_VTIME: 'NAV_VTIME',\r\n    GET_USERS: 'GET_USERS',\r\n    SET_PLAY: 'SET_PLAY',\r\n    SEND_NTCE: 'SEND_NTCE'\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"VideoPlayer_unselectable__21rtG\",\"videoWrapper\":\"VideoPlayer_videoWrapper__1j4LL\",\"controlsBar\":\"VideoPlayer_controlsBar__2vH7B\",\"timeNavBar\":\"VideoPlayer_timeNavBar__2dZFc\",\"progressBar\":\"VideoPlayer_progressBar__4wv_p\",\"playerWidget\":\"VideoPlayer_playerWidget__3Mcly\",\"playButton\":\"VideoPlayer_playButton__iNOez\",\"volumeWidget\":\"VideoPlayer_volumeWidget__AHrZn\",\"volumeButton\":\"VideoPlayer_volumeButton__MU0ZT\",\"volumeIcon\":\"VideoPlayer_volumeIcon__1hNCz\",\"volumeScrollBarWrapper\":\"VideoPlayer_volumeScrollBarWrapper__1Q1IB\",\"volumeScrollBar\":\"VideoPlayer_volumeScrollBar__GoRL0\",\"volumeScrollBarBg\":\"VideoPlayer_volumeScrollBarBg__2l5kl\",\"volumeScrollBarKnob\":\"VideoPlayer_volumeScrollBarKnob__2Psqp\",\"timeCaption\":\"VideoPlayer_timeCaption__2nU-j\",\"fullScreenButton\":\"VideoPlayer_fullScreenButton__18MrT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bSearch\":\"TWidgetBox_bSearch__3QE3g\",\"unselectable\":\"TWidgetBox_unselectable__1SPCA\",\"widboxContainer\":\"TWidgetBox_widboxContainer__1FBmM\",\"createButton\":\"TWidgetBox_createButton__2MzQT\",\"refreshButton\":\"TWidgetBox_refreshButton__2YQYA\",\"separatorTop\":\"TWidgetBox_separatorTop__2cBbJ\",\"separatorBot\":\"TWidgetBox_separatorBot__xhVDz\",\"captionSeparator\":\"TWidgetBox_captionSeparator__1XerM\",\"widgetDivider\":\"TWidgetBox_widgetDivider__1xsoY\",\"widgetSeparator\":\"TWidgetBox_widgetSeparator__2Yqmg\",\"tableSeparator\":\"TWidgetBox_tableSeparator__TpRHq\",\"formSeparator\":\"TWidgetBox_formSeparator__2_EdR\",\"lock\":\"TWidgetBox_lock__7772S\",\"columnHeader\":\"TWidgetBox_columnHeader__nOgYh\",\"roomNameCaption\":\"TWidgetBox_roomNameCaption__2PMWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"AboutBox_unselectable__UBct5\",\"aboutboxContainer\":\"AboutBox_aboutboxContainer__3KMSd\",\"separatorTop\":\"AboutBox_separatorTop__3NP7r\",\"brand\":\"AboutBox_brand__-tnzb\",\"separatorButtonTop\":\"AboutBox_separatorButtonTop__2EZcO\",\"roomButton\":\"AboutBox_roomButton__2jrRk\",\"logoSeries\":\"AboutBox_logoSeries__erlGy\",\"logo\":\"AboutBox_logo__H1WVS\"};","import axios from 'axios';\r\n\r\n/**\r\n * This function returns the response of getting users from the server\r\n * \r\n * @return {Object} The reponse from GET (...)/users\r\n */\r\nconst getUsersResponse = () => {\r\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/users\")\r\n        .then(res => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Failed (1): \" + err);\r\n        });\r\n}\r\n\r\n/**\r\n * This function returns the response of getting rooms from the server\r\n * \r\n * @return {Object} The reponse from GET (...)/rooms\r\n */\r\nconst getRoomsResponse = () => {\r\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/rooms\")\r\n        .then(res => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Failed (2): \" + err);\r\n        });\r\n}\r\n\r\n/**\r\n * This function creates a session and returns its data\r\n * \r\n * @return {Object} The reponse from GET (...)users/auth/verify\r\n */\r\nconst getSession = () => {\r\n    return axios.get(process.env.REACT_APP_API_URL + \"/api/users/auth/verify\") //, {withCredentials: true}\r\n        .then(async (res) => {\r\n            let retrieved = await axios.post(process.env.REACT_APP_API_URL + \"/api/users/auth/retrieve\", {id: res.data.id});\r\n            if (retrieved.data && res) {\r\n                retrieved.data.exp = res.data.exp;\r\n            }\r\n            return retrieved;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Failed (3): \" + err);\r\n        });\r\n}\r\n\r\n/**\r\n * This function creates a room session and returns the token\r\n * \r\n * @param {String} paramCode - The room code\r\n * @param {String} paramId - The user's unique ID\r\n * @return {Object} The reponse from POST (...)/users/auth/obtain\r\n */\r\nconst createRoomSession = (paramCode, paramId) => {\r\n    return axios.post(process.env.REACT_APP_API_URL + \"/api/users/roomauth/obtain\", {code: paramCode, id: paramId})\r\n        .then(async (res) => {\r\n            let payload = await axios.post(process.env.REACT_APP_API_URL + \"/api/users/roomauth/verify\");\r\n            return payload;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Failed (4): \" + err);\r\n        });\r\n}\r\n\r\n/**\r\n * This function updates a room's users when adding a user\r\n * \r\n * @param {String} guestNameReal - The guest's username, if possible\r\n * @param {String} guestNameDisp - The guest's display / initial name\r\n * @param {String} guestId - The guest's unique ID\r\n * @param {String} roomCode - The room code\r\n * @return {Object} The reponse from PATCH (...)/rooms/enter\r\n */\r\nconst addRoomUser = (guestNameReal, guestNameDisp, guestId, roomCode) => {\r\n    return axios.patch(process.env.REACT_APP_API_URL + \"/api/rooms/enter\", {dispName: guestNameDisp, roomCode: roomCode, guestName: guestNameReal, guestId: guestId})\r\n        .then((res) => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Failed (5): \" + err);\r\n        });\r\n}\r\n\r\n/**\r\n * This function updates a room's users when removing a user\r\n * \r\n * @param {String} guestId - The guest's unique ID\r\n * @param {String} roomCode - The room code\r\n * @return {Object} The reponse from PATCH (...)/rooms/enter\r\n */\r\nconst removeRoomUser = (guestId, roomCode) => {\r\n    return axios.patch(process.env.REACT_APP_API_URL + \"/api/rooms/leave\", {roomCode: roomCode, guestId: guestId})\r\n        .then((res) => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Failed (6): \" + err);\r\n        });\r\n}\r\n\r\n/**\r\n * This function generates a non-intersecting, unique ID\r\n * \r\n * @return {String} The unique ID\r\n */\r\nconst genUniqueId = () => {\r\n    return \"?\" + (new Date()).getTime().toString(36);\r\n}\r\n\r\nexport default {getUsersResponse, getRoomsResponse, getSession, createRoomSession, addRoomUser, removeRoomUser, genUniqueId};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Dropdown } from 'react-bootstrap';\r\nimport styles from './Navbar.module.css';\r\nimport utils from '../utils';\r\nimport cx from 'classnames';\r\nimport axios from 'axios';\r\n\r\nfunction Navbar() {\r\n    const [userCaption, setUserCaption] = useState(\"\");\r\n    const [buttonsReady, setButtonsReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function setupNavbar() {\r\n            let resSession = await utils.getSession();\r\n            if (resSession && resSession.data) {\r\n                setUserCaption(resSession.data.username);\r\n            }\r\n            setButtonsReady(true);\r\n        }\r\n        setupNavbar();\r\n    });\r\n\r\n    return (\r\n\r\n        <nav className={cx(\"navbar navbar-expand-lg navbar-light shadow-sm bg-light rounded\", styles.navbar)}>\r\n            <div id=\"navbarContainer\" className={styles.navbarContainer}>\r\n                <div className={styles.navLeft}>\r\n                    <a href=\"/\" className={styles.unselectable}>\r\n                        <span className={styles.bIcon}>\r\n                            <img src=\"/brand.png\" className={styles.unselectable} height=\"36\" alt=\"Clique\"\r\n                            draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                        </span>\r\n                    </a>\r\n                    <span className={styles.navIconSeparator} />\r\n                    <Button href=\"/\" variant=\"light\" className={cx(styles.capsule, styles.unselectable, styles.bWebsite)}>\r\n                        Home\r\n                    </Button>\r\n                    <span className={styles.navSeparator} />\r\n                    <Button href=\"/rooms\" variant=\"light\" className={cx(styles.capsule, styles.unselectable, styles.bWebsite)}>\r\n                        Rooms\r\n                    </Button>\r\n                </div>\r\n                \r\n                <div className={styles.navRight}>\r\n                    {!buttonsReady ?\r\n                    <>\r\n                        <div className={cx(styles.capsule, styles.unselectable, styles.delayed)} />\r\n                        <span className={styles.navSeparator} />\r\n                        <div className={cx(styles.capsule, styles.unselectable, styles.delayed)} />\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {!userCaption ?\r\n                        <>\r\n                            <Button href=\"/login\" variant=\"outline-primary\" className={cx(styles.capsule, styles.unselectable, styles.bLogin)}>\r\n                                Log in\r\n                            </Button>\r\n                            <span className={styles.navSeparator} />\r\n                            <Button href=\"/signup\" variant=\"primary\" className={cx(styles.capsule, styles.unselectable, styles.bSignUp)}>\r\n                                Sign up\r\n                            </Button>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className={styles.unselectable}>\r\n                                {userCaption}\r\n                            </span>\r\n                            <span style={{padding: '0 2px'}} />\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"light\" className={cx(styles.sqButton, styles.unselectable)}>\r\n                                    &#11206;\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item onClick={async () => {\r\n                                        await axios.post(process.env.REACT_APP_API_URL + \"/api/users/auth/clear\");\r\n                                        window.location.reload();\r\n                                    }}>\r\n                                        Sign Out\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item style={{color: '#c00'}} onClick={async () => {\r\n                                        await axios.post(process.env.REACT_APP_API_URL + \"/api/users/delete\", {username: userCaption});\r\n                                        await axios.post(process.env.REACT_APP_API_URL + \"/api/users/auth/clear\");\r\n                                        window.location.reload();\r\n                                    }}>\r\n                                        Delete Account\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </>\r\n                        }\r\n                    </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport { TextField } from '@material-ui/core';\r\nimport styles from './CreateRoomButton.module.css';\r\nimport utils from '../../utils';\r\nimport cx from 'classnames';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\n\r\n/**\r\n * === Global Constants ===\r\n * CREATE_EVENT_EXEC: jQuery event for executing the Create button's function\r\n * MIN_CAPACITY: Minimum allowed room capacity\r\n * MAX_CAPACITY: Maximum allowed room capacity\r\n */\r\nconst CREATE_EVENT_EXEC = \"click\";\r\nconst MIN_CAPACITY = 2;\r\nconst MAX_CAPACITY = 50;\r\n\r\nconst NAME_INPUT_MESSAGES = [\"You must have a room name.\", \"Cannot be over 24 characters.\", \"This name is not available.\"];\r\nconst PASS_INPUT_MESSAGES = [\"Cannot be over 100 characters.\", \"Passwords are limited to ASCII.\"];\r\nconst USERS_INPUT_MESSAGES = [\"Must be a positive integer.\", `Must be between ${MIN_CAPACITY} and ${MAX_CAPACITY}.`];\r\nconst NO_TOKEN_MESSAGE = \"You must log in to use this feature!\";\r\n\r\nfunction handleInputName(nameInput) {\r\n    let isNameEmptyErr = (nameInput.length < 1);\r\n    let isNameLongErr = (nameInput.length > 24);\r\n    let isNameOffendErr = false; // // // // // // // // // // // // // // // // // // // // // WIP\r\n    return [isNameEmptyErr, isNameLongErr, isNameOffendErr];\r\n}\r\n\r\nfunction handleInputPass(passInput) {\r\n    let isPassLongErr = (passInput.length > 100);\r\n    let isPassASCII = /^[\\x20-\\x7F]*$/.test(passInput);\r\n    return [isPassLongErr, !isPassASCII];\r\n}\r\n\r\nfunction handleInputUsers(usersInput) {\r\n    let isUsersInteger = /^\\d+$/.test(usersInput);\r\n    let isOutsideRangeErr = (parseInt(usersInput) > MAX_CAPACITY) || (MIN_CAPACITY > parseInt(usersInput));\r\n    return [!isUsersInteger, isOutsideRangeErr];\r\n}\r\n\r\nfunction tryCreateRoom(paramHost, paramHostId, paramName, paramPassword, paramUserCap) {\r\n    return axios.post(process.env.REACT_APP_API_URL + \"/api/rooms/create\", {\r\n            \"host\": paramHost,\r\n            \"hostId\": paramHostId,\r\n            \"name\": paramName,\r\n            \"password\": paramPassword,\r\n            \"usercap\": paramUserCap\r\n        })\r\n        .then(res => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            // console.log(\"Failed (/users/auth): \" + err);\r\n        });\r\n}\r\n\r\nfunction CreateRoomButton() {\r\n    const [nameErrStatus, setNameErrStatus] = useState(-1);\r\n    const [passErrStatus, setPassErrStatus] = useState(-1);\r\n    const [usersErrStatus, setUsersErrStatus] = useState(-1);\r\n\r\n    const [nameInput, setNameInput] = useState(\"\");\r\n    const [passInput, setPassInput] = useState(\"\");\r\n    const [usersInput, setUsersInput] = useState(\"10\");\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n  \r\n    const handleClose = () => {\r\n        setNameErrStatus(-1);\r\n        setPassErrStatus(-1);\r\n        setUsersErrStatus(-1);\r\n\r\n        setNameInput(\"\");\r\n        setPassInput(\"\");\r\n        setUsersInput(\"10\");\r\n\r\n        setShow(false);\r\n    };\r\n    const handleShow = () => setShow(true);\r\n  \r\n    useEffect(() => {\r\n        async function setupButton() {\r\n            let resSession = await utils.getSession();\r\n            if (resSession && resSession.data) {\r\n                setIsUserLoggedIn(true);\r\n            }\r\n        \r\n            // 'Create' button given click event: attempt to join with fixed cooldown\r\n            $('#createButton').unbind(CREATE_EVENT_EXEC);\r\n            $('#createButton').on(CREATE_EVENT_EXEC, function() {\r\n                let pressedButton = $(this);\r\n                pressedButton.attr('disabled', true);\r\n                window.setTimeout(function () { \r\n                    pressedButton.attr('disabled', false);\r\n                }, 500);\r\n            });\r\n        }\r\n        setupButton();\r\n    });\r\n    \r\n    return (\r\n        <>  \r\n            <Button variant=\"outline-dark\" onClick={handleShow} className={cx(styles.unselectable, styles.createButton)}\r\n              disabled={!isUserLoggedIn} title={!isUserLoggedIn ? NO_TOKEN_MESSAGE : ''}>\r\n                Create\r\n            </Button>\r\n    \r\n            <Modal id=\"createRoomModal\" show={show} onHide={handleClose} animation={false} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        Create Room\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Form>\r\n                    <Modal.Body>\r\n                            <TextField id=\"formRoomName\" label=\"Room Name\" type=\"text\" variant=\"outlined\" size=\"small\" value={nameInput} required style={{width: '70%'}}\r\n                            onChange={(evt) => setNameInput(evt.target.value)}\r\n                            error={nameErrStatus >= 0}\r\n                            helperText={(nameErrStatus >= 0) ? NAME_INPUT_MESSAGES[nameErrStatus] : ' '} />\r\n\r\n                            <div className={styles.formSeparator} />\r\n                            <TextField id=\"formRoomPass\" label=\"Password\" type=\"text\" variant=\"outlined\" size=\"small\" value={passInput} style={{width: '70%'}}\r\n                            onChange={(evt) => setPassInput(evt.target.value)}\r\n                            error={passErrStatus >= 0}\r\n                            helperText={(passErrStatus >= 0) ? PASS_INPUT_MESSAGES[passErrStatus] : ' '} />\r\n\r\n                            <div className={styles.formSeparator} />\r\n                            <TextField id=\"formMaxUsers\" label=\"Capacity\" type=\"number\" variant=\"outlined\" size=\"small\" value={usersInput} required\r\n                            onChange={(evt) => setUsersInput(evt.target.value)}\r\n                            error={usersErrStatus >= 0}\r\n                            helperText={(usersErrStatus >= 0) ? USERS_INPUT_MESSAGES[usersErrStatus] : `Enter an integer between ${MIN_CAPACITY} and ${MAX_CAPACITY}`}\r\n                            InputProps={{inputProps: {min: MIN_CAPACITY, max: MAX_CAPACITY}}} />\r\n                            \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button id=\"createButton\" variant=\"primary\" type=\"submit\" disabled={!isUserLoggedIn} onClick={async () => {\r\n                            const inputNameTest = handleInputName(nameInput).indexOf(true);\r\n                            const inputPassTest = handleInputPass(passInput).indexOf(true);\r\n                            const inputUsersTest = handleInputUsers(usersInput).indexOf(true);\r\n\r\n                            if ((inputNameTest + inputPassTest + inputUsersTest) === -3) {\r\n                                const resSession = await utils.getSession();\r\n                                if (resSession.data) {\r\n                                    const payload = await tryCreateRoom(resSession.data.username, resSession.data._id, nameInput, passInput, parseInt(usersInput));\r\n                                    if (payload) {\r\n                                        await utils.createRoomSession(payload.code, resSession.data._id);\r\n                                        window.location.pathname += `/${payload.code}`;\r\n                                        return;\r\n                                    }\r\n                                    window.location.reload();\r\n                                }\r\n                            }\r\n                            setNameErrStatus(inputNameTest);\r\n                            setPassErrStatus(inputPassTest);\r\n                            setUsersErrStatus(inputUsersTest);\r\n                        }}>\r\n                            Create\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateRoomButton;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { TextField } from '@material-ui/core';\r\nimport styles from './JoinRoomModal.module.css';\r\nimport utils from '../../utils';\r\nimport cx from 'classnames';\r\nimport $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\nconst NAME_INPUT_MESSAGES = [\"You must have a display name.\", \"Cannot be over 36 characters.\", \"This display name is not available.\"];\r\nconst PASS_INPUT_MESSAGE = \"Wrong password.\";\r\nconst JOIN_EVENT_EXEC = \"click\";\r\nconst MODAL_EVENT_EXEC = \"hidden.bs.modal\";\r\n\r\nfunction handleInputName(nameInput) {\r\n    let isNameEmptyErr = (nameInput.length < 1);\r\n    let isNameLongErr = (nameInput.length > 36);\r\n    let isNameOffendErr = false; // // // // // // // // // // // // // // // // // // // // // WIP\r\n    return [isNameEmptyErr, isNameLongErr, isNameOffendErr];\r\n}\r\n\r\nfunction handleInputPass(isPassEnabled, passInput, passKey) {\r\n    return (!isPassEnabled || passInput === passKey);\r\n}\r\n\r\nfunction JoinRoomModal(props) {\r\n    const [nameErrStatus, setNameErrStatus] = useState(-1);\r\n    const [passErrStatus, setPassErrStatus] = useState(false);\r\n    const [nameInput, setNameInput] = useState(\"\");\r\n    const [passInput, setPassInput] = useState(\"\");\r\n    const isRoomFull = props.rowData[2].userCountCurr === props.rowData[2].userCountMax; // TEMP: Disable the 'Join' button for full rooms\r\n    const isPassEnabled = props.rowData[3].length > 0;\r\n    const sessData = props.sessData;\r\n\r\n    useEffect(() => {\r\n\r\n        // 'Join' button given click event: attempt to join with fixed cooldown\r\n        $('#joinButton').unbind(JOIN_EVENT_EXEC);\r\n        $('#joinButton').on(JOIN_EVENT_EXEC, function() {\r\n            let pressedButton = $(this);\r\n            pressedButton.attr('disabled',true);\r\n            window.setTimeout(function () { \r\n                pressedButton.attr('disabled',false);\r\n            }, 500);\r\n        });\r\n\r\n        // Reset Modal fields upon given event (MODAL_EVENT_EXEC)\r\n        $('#joinRoomModal').unbind(MODAL_EVENT_EXEC);\r\n        $('#joinRoomModal').on(MODAL_EVENT_EXEC, function (e) {\r\n            setNameErrStatus(-1);\r\n            setPassErrStatus(false);\r\n            setNameInput(\"\");\r\n            setPassInput(\"\");\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div className=\"modal\" id=\"joinRoomModal\">\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"modal-title\" style={{fontSize: '24px', fontWeight: '500'}}>\r\n                            Join Room\r\n                        </div>\r\n                        <button type=\"button\" className={cx(\"close\", styles.closeButton)} data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">\r\n                                &times;\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                    <Form>\r\n                        <div className={cx(\"modal-content\", styles.contentContainer)} style={{padding: '1rem'}}>\r\n                            <span className={styles.contentBox}>\r\n                                    <TextField id=\"formNameInput\" label=\"Display Name\" type=\"text\" variant=\"outlined\" size=\"small\" value={nameInput} required={!sessData}\r\n                                    onChange={(evt) => setNameInput(evt.target.value)}\r\n                                    error={nameErrStatus >= 0}\r\n                                    helperText={(nameErrStatus >= 0) ? NAME_INPUT_MESSAGES[nameErrStatus] : ' '} />\r\n                                    <span className={styles.formSeparator} />\r\n                                    <TextField id=\"formPassInput\" label=\"Password\" type=\"text\" variant=\"outlined\" size=\"small\" value={passInput}\r\n                                    style={{display: isPassEnabled ? 'inline-block' : 'none', float: 'right'}}\r\n                                    onChange={(evt) => setPassInput(evt.target.value)}\r\n                                    error={passErrStatus}\r\n                                    helperText={passErrStatus ? PASS_INPUT_MESSAGE : ' '} />\r\n                            </span>\r\n                            <div className={styles.formSeparator} />\r\n                            <span className={styles.contentBox}>\r\n                                <div style={{fontSize: '16px', fontWeight: '500'}}>\r\n                                    <b>Name: </b> {props.rowData[0]}\r\n                                    <br />\r\n                                    <b>Host: </b> {props.rowData[1]}\r\n                                    <br />\r\n                                    <b>Users: </b> {`${props.rowData[2].userCountCurr}/${props.rowData[2].userCountMax}`}\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <Button variant=\"secondary\" onClick={() => $('#joinRoomModal').modal('hide')}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button id=\"joinButton\" variant=\"primary\" type=\"submit\"\r\n                              disabled={isRoomFull}\r\n                              title={isRoomFull ? \"This room is full!\" : \"\"}\r\n                              onClick={async () => {\r\n                                const inputNameTest = handleInputName(nameInput).indexOf(true);\r\n                                const inputPassOK = handleInputPass(isPassEnabled, passInput, props.rowData[3]);\r\n\r\n                                if ((inputNameTest === -1 || (inputNameTest === 0 && sessData)) && inputPassOK) {\r\n                                    const chosenId = props.sessData ? props.sessData._id : utils.genUniqueId();\r\n                                    const dispName = nameInput;\r\n                                    const realName = props.sessData ? props.sessData.username : \"\";\r\n                                    await utils.addRoomUser(realName, dispName || realName, chosenId, props.rowData[4]);\r\n                                    await utils.createRoomSession(props.rowData[4], chosenId);\r\n                                    window.location.pathname += `/${props.rowData[4]}`;\r\n                                    return;\r\n                                }\r\n                                setNameErrStatus(sessData ? (inputNameTest === 0 ? -1 : inputNameTest) : inputNameTest);\r\n                                setPassErrStatus(!inputPassOK);\r\n                            }}>\r\n                                Join\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JoinRoomModal;","import React, { Component } from 'react';\r\nimport { Alert, Button, ButtonGroup } from 'react-bootstrap';\r\nimport CreateRoomButton from './CreateRoomButton/CreateRoomButton';\r\nimport JoinRoomModal from './JoinRoomModal/JoinRoomModal';\r\nimport styles from './TWidgetBox.module.css';\r\nimport utils from '../utils';\r\nimport cx from 'classnames';\r\nimport $ from 'jquery';\r\nimport 'datatables.net-responsive/js/dataTables.responsive';\r\n\r\n/**\r\n * === Global Constants ===\r\n * ROW_EVENT_EXEC: jQuery event for executing the DataTable row's function\r\n * ALERT_LIFETIME: Duration of all alerts in milliseconds\r\n */\r\nconst ROW_EVENT_EXEC = \"click\";\r\nconst ALERT_LIFETIME = 5000;\r\n\r\n/**\r\n * This function is customized to sort by the Users ratio of rows in the Rooms List DataTable\r\n * \r\n * Computes ascended sorting in the following order:\r\n *     - Room Capacity (Maximum)\r\n *     - Room Capacity (Current)\r\n *     - Full Rooms\r\n * \r\n * @param {String} x The first ratio, above the second, formatted \"<current>/<max>\" in user count\r\n * @param {String} y The second ratio, below the first, formatted \"<current>/<max>\" in user count\r\n * @return {number} The computed order as an integer\r\n */\r\nfunction swapRatioElements(x, y) {\r\n\r\n    // Parsing x, y data as respective arrays of [current, max]\r\n    const xAsArray = x.split('/').map(function (num) { \r\n        return parseInt(num, 10); \r\n    });\r\n    const yAsArray = y.split('/').map(function (num) { \r\n            return parseInt(num, 10); \r\n    });\r\n\r\n    // Ascending order computation\r\n    if (xAsArray[0] === xAsArray[1]) {\r\n        // Full Room (tested: x/x, for some 'x')\r\n        return -1;\r\n    }\r\n    else if (yAsArray[0] === yAsArray[1]) {\r\n        // Full Room (tested: y/y, for some 'y')\r\n        return 1;\r\n    }\r\n    else if (yAsArray[0] === xAsArray[0]) {\r\n        // x, y have same current Room Capacity\r\n        return yAsArray[1] > xAsArray[1] ? 1 : -1;\r\n    }\r\n    // x, y have different current Room Capacity\r\n    return yAsArray[0] > xAsArray[0] ? 1 : -1;\r\n}\r\n\r\n/**\r\n * This function updates the Rooms DataTable by clearing it, then adds the contents from a new GET response\r\n * \r\n * @param {boolean} isSuccessAlertOn Flag for alerting the website upon success\r\n */\r\nfunction updateRoomTable(isSuccessAlertOn) {\r\n    utils.getRoomsResponse().then(dataInJSON => {\r\n\r\n        // Invalid input handling: alert the user in UI\r\n        if (dataInJSON === undefined) {\r\n            $('#failedAPICallAlert').show();\r\n            $('#successAPICallAlert').hide();\r\n            setTimeout(function(){ $('#failedAPICallAlert').hide() }, ALERT_LIFETIME);\r\n            return;\r\n        }\r\n        else if (isSuccessAlertOn) {\r\n            $('#successAPICallAlert').show();\r\n            setTimeout(function(){ $('#successAPICallAlert').hide() }, ALERT_LIFETIME);\r\n        }\r\n        $('#failedAPICallAlert').hide();\r\n\r\n        // Full table reset + unbinding if events are placed here\r\n        let table = $('#roomTable').DataTable().clear();\r\n        // $('#roomTable tbody').unbind(ROW_EVENT_EXEC);\r\n\r\n        // For each database row, add it to the table\r\n        Object.keys(dataInJSON).forEach(key => {\r\n            let roomInJSON = dataInJSON[key];\r\n\r\n            if (roomInJSON['users'] !== undefined) {\r\n                // Event (table): append database row\r\n                table.row.add([\r\n                    roomInJSON['roomName'],\r\n                    roomInJSON['roomHost'],\r\n                    {'userCountCurr': roomInJSON['users'].length, 'userCountMax': roomInJSON['maxUsers']},\r\n                    roomInJSON['roomPass'],\r\n                    roomInJSON['roomCode']\r\n                ]);\r\n            }\r\n            table.draw('false');\r\n        });\r\n    });\r\n}\r\n\r\nconst SuccessAPICallAlert = () => {\r\n    return (\r\n        <Alert id=\"successAPICallAlert\" variant=\"success\" style={{display: 'none'}} onClose={() => $('#successAPICallAlert').hide()} dismissible>\r\n            <p className={styles.unselectable}>\r\n                Updated rooms have been successfully retrieved.\r\n            </p>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nconst FailedAPICallAlert = () => {\r\n    return (\r\n        <Alert id=\"failedAPICallAlert\" variant=\"danger\" style={{display: 'none'}} onClose={() => $('#failedAPICallAlert').hide()} dismissible>\r\n            <p className={styles.unselectable}>\r\n                Failed to retrieve updated rooms via Clique API. Please try again later.\r\n            </p>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nclass TWidgetBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowData: [\"\", \"\", {userCountCurr: 0, userCountMax: 0}, \"\", \"\"],\r\n            sessData: {_id: \"\", username: \"\", email: \"\", exp: 0}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(document).ready(async () => {\r\n            $.noConflict();\r\n            \r\n            // Sorting elements based on room user count (see: swapRatioElements())\r\n            $.fn.dataTable.ext.oSort[\"userratio-asc\"] = function (x, y) {\r\n                return -swapRatioElements(x, y);\r\n            }\r\n            $.fn.dataTable.ext.oSort[\"userratio-desc\"] = function (x, y) {\r\n                return swapRatioElements(x, y);\r\n            };\r\n\r\n            // Form table with specific column constraints\r\n            let table = $('#roomTable').DataTable({\r\n                order: [],\r\n                language: {\r\n                    emptyTable: \" \"\r\n                },\r\n                columnDefs: [{\r\n                    targets: [0, 1, 2],\r\n                    className: styles.unselectable\r\n                }, {\r\n                    targets: 2,\r\n                    searchable: false,\r\n                    type: 'userratio',\r\n                    render: function ( data, type, row, meta ) {\r\n                        return `${data['userCountCurr']}/${data['userCountMax']}`;\r\n                }}, {\r\n                    targets: 3,\r\n                    searchable: false,\r\n                    className: styles.lock,\r\n                    render: function ( data, type, row, meta ) {\r\n                        return (data === '') ? '' : '<img src=\"/lock.png\" className={styles.unselectable} alt=\"Locked\" draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />';\r\n                }}]\r\n            });\r\n            updateRoomTable(false);\r\n\r\n            // Modal permissions setup before row events\r\n            const setupModalPerms = async () => {\r\n                let resSession = await utils.getSession();\r\n                if (resSession && resSession.data) {\r\n                    this.setState({rowData: this.state.rowData, sessData: resSession.data});\r\n                }\r\n            }\r\n            await setupModalPerms();\r\n\r\n            // Rooms 'Row' button given click event; pass table data into state, re-rendering the shown modal\r\n            // Note: here, a parameterized arrow function must be used; two scopes of 'this' are needed!\r\n            $('#roomTable tbody').on(ROW_EVENT_EXEC, 'tr', (evt) => {\r\n                let rowData = table.row(evt.target).data();\r\n                if (rowData !== undefined) {\r\n                    this.setState({rowData: rowData, sessData: this.state.sessData});\r\n                    $('#joinRoomModal').modal('show');\r\n                }\r\n            });\r\n            $('#roomTable tbody').css('cursor', 'pointer');\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n\r\n            <div id=\"widboxContainer\" className={styles.widboxContainer}>\r\n                <JoinRoomModal rowData={this.state.rowData} sessData={this.state.sessData} />\r\n                <div style={{height: '40px'}}>\r\n                    <FailedAPICallAlert />\r\n                    <SuccessAPICallAlert />\r\n                </div>\r\n                <div className={styles.separatorTop} />\r\n                <span className={styles.widgetDivider}>\r\n                    <h2 className={cx(styles.unselectable, styles.roomNameCaption)}>\r\n                        Room List\r\n                    </h2>\r\n                    <div className={styles.captionSeparator} />\r\n                    <ButtonGroup>\r\n                        <Button variant=\"outline-dark\" className={cx(styles.unselectable, styles.refreshButton)} id=\"tableRefreshButton\" onClick={() => {\r\n                            // 'Refresh' button given click event: attempt to get rooms with cooldown\r\n                            updateRoomTable(true);\r\n\r\n                            let pressedButton = document.getElementById('tableRefreshButton');\r\n                            pressedButton.disabled = true;\r\n                            window.setTimeout(() => { \r\n                                pressedButton.disabled = false;\r\n                            }, ALERT_LIFETIME);\r\n                        }}>\r\n                            Refresh\r\n                        </Button>\r\n                        <CreateRoomButton />\r\n                    </ButtonGroup>\r\n                </span>\r\n                <br />\r\n\r\n                <table id=\"roomTable\" className=\"hover order-column row-border\" style={{width: '100%'}}>\r\n                    <thead>\r\n                        <tr style={{outline: 'none'}}>\r\n                            <th style={{width: '45%'}} className={styles.columnHeader}>\r\n                                Room Name\r\n                            </th>\r\n                            <th style={{width: '25%'}} className={styles.columnHeader}>\r\n                                Host\r\n                            </th>\r\n                            <th style={{width: '15%'}} className={styles.columnHeader}>\r\n                                Users\r\n                            </th>\r\n                            <th style={{width: '15%'}} className={styles.columnHeader}>\r\n                                Password\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                <div className={styles.separatorBot} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TWidgetBox;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport styles from './AboutBox.module.css';\r\nimport cx from 'classnames';\r\n\r\nclass AboutBox extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div id=\"aboutboxContainer\" className={styles.aboutboxContainer}>\r\n                    <div className={styles.separatorTop}>\r\n                        <img src=\"/brand_full.png\" className={cx(styles.unselectable, styles.brand)} height=\"100\" alt=\"Clique\"\r\n                        draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                    </div>\r\n                    <div className={styles.separatorButtonTop}>  \r\n                        <Button href=\"/rooms\" variant=\"outline-dark\" draggable=\"false\" className={cx(styles.unselectable, styles.roomButton)}>\r\n                            Start Watching\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        <p style={{textAlign: 'justify'}}>\r\n                            This is an application built for watching YouTube videos with your friends in real-time, and was heavily insired\r\n                            by <b>Watch2Gether</b>. Some notable differences are the Room List, custom display names, the options that come\r\n                            with creating rooms, and accounts.\r\n                        </p>\r\n                        <br />\r\n                        <p style={{textAlign: 'justify'}}>\r\n                            Clique is currently being worked on to support all latest versions of modern browsers. The backend is powered by\r\n                            Node.js and Express.js, while the frontend uses the React library with Bootstrap. Mongoose interacts with MongoDB\r\n                            Atlas to store room session and user data and real-time video interactions are made through Socket.IO. Finally,\r\n                            jQuery is used to implement DataTables.\r\n                        </p>\r\n                        <br />\r\n                        <div className={styles.logoSeries}>\r\n                            <img src=\"/logo_mongodb.png\" className={cx(styles.unselectable, styles.logo)}  alt=\"MongoDB\" draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                            <img src=\"/logo_expressjs.png\" className={cx(styles.unselectable, styles.logo)}  alt=\"ExpressJS\" draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                            <img src=\"/logo_react.png\" className={cx(styles.unselectable, styles.logo)}  alt=\"React\" draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                            <img src=\"/logo_nodejs.png\" className={cx(styles.unselectable, styles.logo)}  alt=\"NodeJS\" draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { TextField } from '@material-ui/core';\r\nimport styles from './SignUpWindow.module.css';\r\nimport utils from '../utils';\r\nimport cx from 'classnames';\r\nimport axios from 'axios';\r\n\r\nconst NAME_INPUT_MESSAGES = [\"This username is already taken!\", \"This username is not available.\", \"The username must be between 3 and 16 characters long.\", \"The username may only consist of word characters (0-9, a-z, A-Z, _)\"];\r\nconst EMAIL_INPUT_MESSAGES = [\"This email is already taken!\", \"You must have an email.\", \"Enter a valid email.\"];\r\nconst EMAIL_DEFAULT_MESSAGE = \"We'll never share your email with anyone else.\";\r\nconst PASS_INPUT_MESSAGES = [\"The password must be between 8 and 100 characters long.\", \"Passwords are limited to ASCII.\"];\r\nconst PASS_CONF_INPUT_MESSAGE = \"The passwords do not match. Please try again.\";\r\nconst EMAIL_VALIDATION_REGEX = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nasync function handleInputName(nameInput) {\r\n    let isNameUnique = true;\r\n    await utils.getUsersResponse().then(dataInJSON => {\r\n        isNameUnique = !(dataInJSON.some((user) => user.username.toUpperCase() === nameInput.toUpperCase()));\r\n    });\r\n\r\n    let isNameOffendErr = false; // // // // // // // // // // // // // // // // // // // // // WIP\r\n    let isNameInRange = (3 <= nameInput.length) && (nameInput.length <= 16);\r\n    let isNameWordChars = /^\\w*$/.test(nameInput);\r\n    return [!isNameUnique, isNameOffendErr, !isNameInRange, !isNameWordChars];\r\n}\r\n\r\n// CREDITS TO: https://gist.github.com/badsyntax/719800\r\nasync function handleInputEmail(emailInput) {\r\n    let isEmailUnique = true;\r\n    await utils.getUsersResponse().then(dataInJSON => {\r\n        isEmailUnique = !(dataInJSON.some((user) => user.email.toUpperCase() === emailInput.toUpperCase()));\r\n    });\r\n\r\n    let isEmailEmptyErr = (emailInput.length === 0);\r\n    let isEmailValid = EMAIL_VALIDATION_REGEX.test(emailInput);\t\r\n    return [!isEmailUnique, isEmailEmptyErr, !isEmailValid];\r\n}\r\n\r\nfunction handleInputPass(passInput) {\r\n    let isPassInRange = (8 <= passInput.length) && (passInput.length <= 100);\r\n    let isPassASCII = /^[\\x20-\\x7F]*$/.test(passInput);\r\n    return [!isPassInRange, !isPassASCII];\r\n}\r\n\r\nfunction sendAccountRequest(username, email, password) {\r\n    axios.post(process.env.REACT_APP_API_URL + \"/api/users/add\", {\r\n        \"username\": username,\r\n        \"password\": password,\r\n        \"email\": email\r\n      })\r\n      .catch(err => {\r\n        // console.log(\"Failed (/users/add): \" + err);\r\n      });\r\n}\r\n\r\nfunction getSessionPerm(email) {\r\n    return axios.post(process.env.REACT_APP_API_URL + \"/api/users/auth/obtain\", {\r\n            \"email\": email,\r\n            \"ignorePass\": true\r\n        })\r\n        .then(res => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            // console.log(\"Failed (/users/auth): \" + err);\r\n        });\r\n}\r\n\r\nfunction SignUpWindow() {\r\n    const [nameErrStatus, setNameErrStatus] = useState(-1);\r\n    const [passErrStatus, setPassErrStatus] = useState(-1);\r\n    const [emailErrStatus, setEmailErrStatus] = useState(-1);\r\n    const [passConfErrStatus, setPassConfErrStatus] = useState(false);\r\n\r\n    const [nameInput, setNameInput] = useState(\"\");\r\n    const [passInput, setPassInput] = useState(\"\");\r\n    const [emailInput, setEmailInput] = useState(\"\");\r\n    const [passConfInput, setPassConfInput] = useState(\"\");\r\n    \r\n    const launchTerms = () => {\r\n        window.open(window.location.origin + '/terms');\r\n    }\r\n\r\n    return (\r\n        <div className={styles.signUpWrap}>\r\n            <div className={cx(\"\", styles.signUpBox)}>\r\n                <div className={styles.iconContainer}>\r\n                    <span className={styles.iconHelper} />\r\n                    <span className={cx(styles.iconTextContainer, styles.unselectable)}>\r\n                        <img src=\"/brand.png\" className={styles.icon} height=\"64\" alt=\"Clique\"\r\n                            draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                        <b style={{fontSize: '32px'}}>\r\n                            &nbsp;\r\n                            Sign Up\r\n                        </b>\r\n                    </span>\r\n                </div>\r\n                <div style={{padding: '10px'}} />\r\n                <div className={styles.formWrapper}>\r\n                    <Form>\r\n                        <TextField id=\"formInputUsername\" className={styles.formInput} label=\"Username\" type=\"text\" variant=\"outlined\" size=\"small\" required value={nameInput}\r\n                          onChange={(evt) => setNameInput(evt.target.value)}\r\n                          error={nameErrStatus >= 0}\r\n                          helperText={(nameErrStatus >= 0) ? NAME_INPUT_MESSAGES[nameErrStatus] : ' '} />\r\n                          \r\n                        <div className={styles.formInputSeparator} />\r\n                        <TextField id=\"formInputEmail\" className={styles.formInput} label=\"Email\" type=\"text\" variant=\"outlined\" size=\"small\" required value={emailInput}\r\n                          onChange={(evt) => setEmailInput(evt.target.value)}\r\n                          error={emailErrStatus >= 0}\r\n                          helperText={(emailErrStatus >= 0) ? EMAIL_INPUT_MESSAGES[emailErrStatus] : EMAIL_DEFAULT_MESSAGE} />\r\n\r\n                        <div className={styles.formInputSeparator} />\r\n                        <TextField id=\"formInputPassword\" className={styles.formInput} label=\"Password\" type=\"password\" variant=\"outlined\" size=\"small\" required value={passInput}\r\n                          onChange={(evt) => setPassInput(evt.target.value)}\r\n                          error={passErrStatus >= 0}\r\n                          helperText={(passErrStatus >= 0) ? PASS_INPUT_MESSAGES[passErrStatus] : ' '} />\r\n\r\n                        <div className={styles.formInputSeparator} />\r\n                        <TextField id=\"formInputPasswordConf\" className={styles.formInput} label=\"Confirm Password\" type=\"password\" variant=\"outlined\" size=\"small\" required value={passConfInput}\r\n                          onChange={(evt) => setPassConfInput(evt.target.value)}\r\n                          error={passConfErrStatus}\r\n                          helperText={passConfErrStatus ? PASS_CONF_INPUT_MESSAGE : ' '} />\r\n\r\n                        <div className={styles.formInputSeparator} />\r\n                        <div className={styles.formCheckSubContainer}>\r\n                            <label className={cx(\"container\", styles.checkboxContainer)} style={{paddingLeft: '5px'}}>\r\n                                <input id=\"termsCheckbox\" type=\"checkbox\" />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                                By signing up, you agree to our <span className={styles.termsCaption} onClick={() => launchTerms()}><b>Terms of Service</b></span>.\r\n                                <span className={styles.checkmark}></span>\r\n                            </label>\r\n                        </div>\r\n                        <div className={styles.formInputSeparator} />\r\n                        <div className={styles.signUpContainer}>\r\n                            <Button variant=\"primary\" className={styles.signUpButton} onClick={async () => {\r\n                                let inputNameTest = -1;\r\n                                await handleInputName(nameInput)\r\n                                        .then((res) => inputNameTest = res.indexOf(true))\r\n                                        .catch((err) => console.log(err));\r\n                                let inputEmailTest = -1;\r\n                                await handleInputEmail(emailInput)\r\n                                        .then((res) => inputEmailTest = res.indexOf(true))\r\n                                        .catch((err) => console.log(err));\r\n                                const inputPassTest = handleInputPass(passInput).indexOf(true);\r\n                                const inputPassConfTest = (passInput !== passConfInput);\r\n                                const termsChecked = document.getElementById('termsCheckbox').checked;\r\n\r\n                                if (((inputNameTest + inputEmailTest + inputPassTest) === -3) && !inputPassConfTest && termsChecked) {\r\n                                    await sendAccountRequest(nameInput, emailInput, passInput);\r\n                                    setTimeout(async () => {\r\n                                        await getSessionPerm(emailInput);\r\n                                        window.location.href = \"/rooms\";\r\n                                    }, 1);\r\n                                    return;\r\n                                }\r\n                                setNameErrStatus(inputNameTest);\r\n                                setEmailErrStatus(inputEmailTest);\r\n                                setPassErrStatus(inputPassTest);\r\n                                setPassConfErrStatus(inputPassConfTest);\r\n                            }}>\r\n                                Sign Up\r\n                            </Button>\r\n                            <Button variant=\"secondary\" className={styles.backButton} onClick={() => {\r\n                                window.location.href = \"/rooms\";\r\n                            }}>\r\n                                Back\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpWindow;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { TextField } from '@material-ui/core';\r\nimport styles from './LogInWindow.module.css';\r\nimport utils from '../utils';\r\nimport $ from 'jquery';\r\nimport cx from 'classnames';\r\nimport axios from 'axios';\r\n\r\nconst CRED_ERROR_MESSAGE = \"The credentials you entered did not match our records. Please try again.\";\r\nconst LOGIN_EVENT_EXEC = \"click\";\r\n\r\nasync function getAccountObj(identifier) {\r\n    let accountObject;\r\n    await utils.getUsersResponse().then(dataInJSON => {\r\n        accountObject = dataInJSON.find(account =>\r\n            (account.username.toUpperCase() === identifier.toUpperCase()) ||\r\n            (account.email === identifier.toUpperCase()));\r\n    });\r\n    return accountObject;\r\n}\r\n\r\nfunction getSessionPerm(email, password) {\r\n    return axios.post(process.env.REACT_APP_API_URL + \"/api/users/auth/obtain\", {\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"ignorePass\": false\r\n        })\r\n        .then(res => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            // console.log(\"Failed (/users/auth): \" + err);\r\n        });\r\n}\r\n\r\nfunction LogInWindow() {\r\n    const [showError, setShowError] = useState(false);\r\n    const [identInput, setIdentInput] = useState(\"\");\r\n    const [passInput, setPassInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function redirectOnLogin() {\r\n            let resSession = await utils.getSession();\r\n            if (resSession && resSession.data && !showError) {\r\n                // Test for valid session data in this attempt as well as the current session\r\n                window.location.href = \"/rooms\";\r\n            }\r\n        }\r\n        redirectOnLogin();\r\n\r\n        // 'Log In' button given click event: attempt to join with fixed cooldown\r\n        $('#loginButton').unbind(LOGIN_EVENT_EXEC);\r\n        $('#loginButton').on(LOGIN_EVENT_EXEC, function() {\r\n            let pressedButton = $(this);\r\n            pressedButton.attr('disabled',true);\r\n            window.setTimeout(function () { \r\n                pressedButton.attr('disabled',false);\r\n            }, 500);\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div id=\"master\" className={styles.logInWrap}>\r\n            <div className={styles.logInBox}>\r\n                <div className={styles.iconContainer}>\r\n                    <span className={styles.iconHelper} />\r\n                    <span className={cx(styles.iconTextContainer, styles.unselectable)}>\r\n                        <img src=\"/brand.png\" className={styles.icon} height=\"64\" alt=\"Clique\"\r\n                            draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                        <b style={{fontSize: '32px'}}>\r\n                            &nbsp;\r\n                            Log In\r\n                        </b>\r\n                    </span>\r\n                </div>\r\n                <div style={{height: '20px'}} />\r\n                <div className={styles.errorMessage}>\r\n                    {showError ? CRED_ERROR_MESSAGE : ' '}\r\n                </div>\r\n                <div className={styles.formWrapper}>\r\n                    <Form>\r\n                        <TextField id=\"formInputIdentifier\" className={styles.formInput} label=\"Username / Email\" type=\"text\" variant=\"outlined\" size=\"small\" required value={identInput}\r\n                          onChange={(evt) => setIdentInput(evt.target.value)} />\r\n                        <div className={styles.formInputSeparator} />\r\n                        <TextField id=\"formInputPassword\" className={styles.formInput} label=\"Password\" type=\"password\" variant=\"outlined\" size=\"small\" required value={passInput}\r\n                          onChange={(evt) => setPassInput(evt.target.value)} />\r\n                        <div className={styles.formInputSeparator} />\r\n                        <div className={styles.logInContainer}>\r\n                            <Button id=\"loginButton\" variant=\"primary\" type=\"submit\" className={styles.logInButton} onClick={async () => {\r\n                                \r\n                                // Use identifier (i.e. username / email) to get account in database\r\n                                let inMemoryToken = false;\r\n                                let accountObject = await getAccountObj(identInput);\r\n                                if (accountObject !== undefined) {\r\n                                    // Account is found in database; then, check if credentials match\r\n                                    inMemoryToken = await getSessionPerm(accountObject.email, passInput);\r\n                                }\r\n\r\n                                // Unsuccessful credentials: show error caption & reset password field\r\n                                setShowError((accountObject === undefined) || (!inMemoryToken));\r\n                                setPassInput(\"\");\r\n                            }}>\r\n                                Log In\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogInWindow;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport styles from './SessionResetModal.module.css';\r\nimport utils from '../utils';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\n\r\nfunction renewSession(email) {\r\n    return axios.post(process.env.REACT_APP_API_URL + \"/api/users/auth/obtain\", {\r\n            \"email\": email,\r\n            \"ignorePass\": true\r\n        })\r\n        .then(res => {\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            // console.log(\"Failed (/users/auth): \" + err);\r\n        });\r\n}\r\n\r\nfunction SessionResetModal() {\r\n    const [show, setShow] = useState(false);\r\n    const [sessEmail, setSessEmail] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function deriveSessionEmail() {\r\n            let resSession = await utils.getSession();\r\n            if (resSession && resSession.data) {\r\n\r\n                // Ensures setting non-default values\r\n                if (resSession.data.email) {\r\n                    setSessEmail(resSession.data.email);\r\n                    renewSession(resSession.data.email);\r\n                }\r\n                if (resSession.data.exp) {\r\n                    // Set a timer for each fresh redirect, until the session expires\r\n                    let sessTimer = setTimeout(() => {\r\n                        // Clear all current modals in order to get the new modal in front\r\n                        let modalElems = document.querySelectorAll(\".modal\");\r\n                        for (let modalElem of modalElems) {\r\n                            modalElem.parentNode.removeChild(modalElem);\r\n                        }\r\n                        let modalBackdropElems = document.querySelectorAll(\".modal-backdrop.show\");\r\n                        for (let modalBackdropElem of modalBackdropElems) {\r\n                            modalBackdropElem.parentNode.removeChild(modalBackdropElem);\r\n                        }\r\n                        setShow(true);\r\n\r\n                        // Interval events (includes catching developers manually deleting the backdrop)\r\n                        setInterval(() => {\r\n                            let modalBackdropElem = document.querySelector(\".modal-backdrop\");\r\n                            if (!modalBackdropElem || modalBackdropElem.style.display || ($(modalBackdropElem).css('visibility') === 'hidden')) {\r\n                                window.location.reload();\r\n                            }\r\n                        }, 100);\r\n                        clearInterval(sessTimer);\r\n                    }, process.env.REACT_APP_SESSION_LIFE * 1000);\r\n                }\r\n            }\r\n        }\r\n        deriveSessionEmail();\r\n    }, [show]);\r\n\r\n    return (\r\n        <Modal id=\"sessionResetModal\" show={show} onHide={() => setShow(false)} animation={false} keyboard={false} backdrop=\"static\" centered>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    Session Expired\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                Your session has expired due to inactivity.\r\n                <br /><br />\r\n                Press OK to re-establish your session.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button id=\"renewalButton\" className={styles.renewalButton} variant=\"primary\" onClick={() => {\r\n                    renewSession(sessEmail);\r\n                    window.location.reload();\r\n                }}>\r\n                    OK\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SessionResetModal;","import React, { Component } from 'react';\r\nimport styles from './TermsBox.module.css';\r\n\r\nclass TermsBox extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div id=\"termsboxContainer\" className={styles.termsboxContainer}>\r\n                    <div className={styles.separatorTop}>\r\n                        Terms of Service\r\n                    </div>\r\n                    <div>\r\n                        <p style={{textAlign: 'justify'}}>\r\n                            Last updated: July 19, 2020\r\n                            <br /><br />\r\n                            Please read these terms and conditions (the \"Terms of Service\") carefully before\r\n                            using the Clique website (the \"Service\"). By signing up for a Clique Account and\r\n                            using the Services, you are agreeing to be bound by the following terms and\r\n                            conditions.\r\n                            <br /><br />\r\n                            Clique reserves the right to update and change the Terms of Service by posting\r\n                            updates and changes to the Clique website. You are advised to check the Terms of\r\n                            Service from time to time for any updates or changes that may impact you. If\r\n                            you do not accept such amendments, you must cease using the Services.\r\n                            <br /><br />\r\n                            If you're under the required age of 13 years old to manage your own Clique Account,\r\n                            you must have your parent or legal guardian's permission to use a Clique Account.\r\n                            <br /><br />\r\n                            While we have made attempts at ensuring that Clique is secure, this application\r\n                            is open-source and uses elementary concepts of security. There is no certainty\r\n                            that breaches in security will never occur. As such, you are advised to refrain\r\n                            from entering \"real\" personal information in signing up for a Clique Account. Clique\r\n                            is not responsible for any personal damages that may occur and proactive measures\r\n                            will not be taken.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TermsBox;","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className={styles.footer}>\r\n            <div className={styles.termsContainer}>\r\n                <div className={styles.termsWrapper}>\r\n                    -&nbsp;\r\n                    <a href=\"/terms\" className={styles.termsAnchor}>\r\n                        Terms of Service\r\n                    </a>\r\n                    &nbsp;-\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport styles from './RoomNavbar.module.css';\r\nimport cx from 'classnames';\r\n\r\nfunction RoomNavbar(props) {\r\n    const [queryInput, setQueryInput] = useState(\"\");\r\n\r\n    return (\r\n        <nav className={cx(\"navbar navbar-expand-lg navbar-light shadow-sm bg-light rounded\", styles.roomBar)}>\r\n            <div id=\"roomBarContainer\" className={styles.roomBarContainer}>\r\n                <div className={styles.roomBarContent}>\r\n                    <div className={styles.navLeft}>\r\n                        <a href=\"/\" className={styles.unselectable}>\r\n                            <span className={styles.bIcon}>\r\n                                <img src=\"/brand.png\" className={styles.unselectable} height=\"36\" alt=\"Clique\"\r\n                                draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                            </span>\r\n                        </a>\r\n                    </div>\r\n                    <div className={cx(styles.navCenter, styles.barWrapper)}>\r\n                        <div className={cx(styles.barInputGroup, \"input-group input-group-sm\")}>\r\n                            <input placeholder=\"Search\" aria-label=\"Search\" className={cx(styles.searchForm, \"form-control\")} onKeyPress={(evt) => {\r\n                                if (evt.which === 13 || evt.keyCode === 13) {\r\n                                    props.searchHandler(queryInput);\r\n                                }\r\n                            }}\r\n                            onChange={(evt) => setQueryInput(evt.target.value)} />\r\n                            <div className={\"input-group-append\"}>\r\n                                <button type=\"button\" className={cx(styles.searchButton, \"btn btn-light\")} onClick={() => props.searchHandler(queryInput)}>\r\n                                    <img src=\"/widget_ico_search.png\" className={styles.unselectable} height=\"14\" alt=\"Search\"\r\n                                    draggable=\"false\" onContextMenu={function (e) {e.preventDefault()}} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className={styles.navRight} /> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default RoomNavbar;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport styles from './VideoCard.module.css';\r\nimport cx from 'classnames';\r\n\r\nfunction VideoCard(props) {\r\n\r\n    return (\r\n        <Card className={cx(styles.videoCard, styles.unselectable)} onClick={() => props.clickHandler(props.videoId)} title={props.videoName}>\r\n            <Card.Img className={styles.unselectable} variant=\"top\" src={props.videoThumb} />\r\n            <Card.Body className={styles.videoTitleWrapper}>\r\n                <Card.Text className={styles.videoTitleText}>\r\n                    {props.videoName}\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Text className={styles.videoAuthorText}>\r\n                {props.channelName}\r\n            </Card.Text>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default VideoCard;","import React, { useEffect, useState } from 'react';\r\nimport VideoCard from './VideoCard/VideoCard';\r\nimport styles from './VideoPicker.module.css';\r\n\r\nfunction VideoPicker(props) {\r\n    const [videoCards, setVideoCards] = useState([]);\r\n\r\n    const handleCardClick = (paramVideoId) => {\r\n        props.clickHandler(paramVideoId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updatedVideoCards = [];\r\n        props.videoResults.forEach(videoResult => {\r\n            try {\r\n                const resVideoId = videoResult.id.videoId;\r\n                const resVideoName = videoResult.snippet.title;\r\n                const resChannelName = videoResult.snippet.channelTitle;\r\n                const resVideoThumb = videoResult.snippet.thumbnails.medium.url;\r\n                updatedVideoCards.push(\r\n                    <VideoCard\r\n                      key={resVideoId}\r\n                      videoId={resVideoId}\r\n                      videoName={resVideoName}\r\n                      channelName={resChannelName}\r\n                      videoThumb={resVideoThumb}\r\n                      clickHandler={handleCardClick}\r\n                    />\r\n                );\r\n            }\r\n            catch (err) {}\r\n        });\r\n        setVideoCards(updatedVideoCards);\r\n    }, [props.videoResults])\r\n\r\n    return (\r\n        <ul className={styles.videoPicker}>\r\n            {videoCards}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default VideoPicker;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport YouTube from 'react-youtube';\r\nimport { V_UNSTARTED, V_END, V_PLAY, V_PAUSE, V_BUFFER, V_CUE } from './VideoStates';\r\nimport styles from './VideoPlayer.module.css';\r\nimport cx from 'classnames';\r\n\r\nfunction VideoPlayer(props) {\r\n    const playerTarget = useRef(null);\r\n    const [playerState, setPlayerState] = useState(-1);\r\n    const [currVideoDuration, setCurrVideoDuration] = useState(0);\r\n    const [maxVideoDuration, setMaxVideoDuration] = useState(0);\r\n    const [intervalId, setIntervalId] = useState(0);\r\n    const [volScroll, setVolScroll] = useState(false);\r\n    const [currPlaying, setCurrPlaying] = useState(false);\r\n    const [execOnStart, setExecOnStart] = useState(true);\r\n\r\n    const [volScrollMaxWidth, iconPlay, iconPause, videoOptions] = [72, '\\u25b6', '\\u275a\\u275a', {\r\n        height: '488',\r\n        width: `800`,\r\n        playerVars: {\r\n            origin: `${window.location.protocol}//${window.location.host}`,\r\n            enablejsapi: 1,\r\n            disablekb: 1,\r\n            rel: 0,\r\n            controls: 0,\r\n            modestbranding: 1\r\n        },\r\n    }];\r\n\r\n    const modifyPlayState = (paramPlayState) => {\r\n        setCurrPlaying(paramPlayState);\r\n        props.playHandler(paramPlayState);\r\n    }\r\n\r\n    const restartVideo = () => {\r\n        setCurrVideoDuration(0);\r\n        modifyPlayState(true);\r\n        playerTarget.current.playVideo();\r\n    }\r\n\r\n    const execNewInterval = () => {\r\n        return setInterval(() => {\r\n            const currVideoTime = playerTarget.current.getCurrentTime();\r\n            setCurrVideoDuration(currVideoTime);\r\n            props.timeHandler(currVideoTime);\r\n        }, 100);\r\n    };\r\n\r\n    const putFullScreen = () => {\r\n        playerTarget.current.getIframe().requestFullscreen();\r\n    }\r\n\r\n    const padStart = (paramString, paramChar, paramMaxLen) => {\r\n        // padStart: IE (all versions) compatibility\r\n        let padding = \"\";\r\n        for (let charCount = 0; charCount < (paramMaxLen - paramString.length); charCount++) {\r\n            padding += paramChar;\r\n        }\r\n        return padding + paramString;\r\n    }\r\n\r\n    const encodeAsDigitTime = (paramSeconds, periodScale = [24, 60, 60]) => {\r\n        let encodedTime = [];\r\n        let timeUseZeros = false;\r\n        let maxInterval = periodScale.reduce((a, b) => a * b);\r\n        for (let intervalScale of periodScale) {\r\n            const remainSeconds = paramSeconds % maxInterval;\r\n            const timeThisScale = paramSeconds - remainSeconds;\r\n            if (timeUseZeros) {\r\n                encodedTime.push(padStart(`${timeThisScale / maxInterval}`, '0', 2));\r\n            }\r\n            else if (timeThisScale) {\r\n                timeUseZeros = true;\r\n                encodedTime.push(`${timeThisScale / maxInterval}`);\r\n            }\r\n            paramSeconds = remainSeconds;\r\n            maxInterval /= intervalScale;\r\n        }\r\n        if (!encodedTime.length) {\r\n            encodedTime.push('0');\r\n        }\r\n        encodedTime.push(padStart(`${(paramSeconds - paramSeconds % maxInterval) / maxInterval}`, '0', 2));\r\n        return encodedTime.join(':');\r\n    }\r\n\r\n    const skipToTime = (paramDuration) => {\r\n        // console.log(\"Player > paramDuration = \" + paramDuration);\r\n        clearInterval(intervalId);\r\n        setCurrVideoDuration(paramDuration);\r\n        playerTarget.current.seekTo(paramDuration, true);\r\n    }\r\n\r\n    const handleTimeNavClick = (evt) => {\r\n        const timeNavRefProps = evt.currentTarget.getBoundingClientRect();\r\n        const newCurrDuration = maxVideoDuration * Math.min(Math.max((evt.clientX - timeNavRefProps.left) / (timeNavRefProps.right - timeNavRefProps.left), 0), 1);\r\n        // skipToTime(newCurrDuration);\r\n        props.skipHandler(newCurrDuration);\r\n    };\r\n\r\n    const handleVolumeKnobDrag = (evt) => {\r\n        if (playerTarget.current) {\r\n            const volumeKnobNode = document.querySelector(\"#volumeKnob\");\r\n            const volumeBarNode = document.querySelector(\"#volumeScrBar\");\r\n            const volumeBarProps = volumeBarNode.getBoundingClientRect();\r\n\r\n            const posAdjustment = Math.min(Math.max(evt.clientX - volumeBarProps.left, 0), volScrollMaxWidth);\r\n            volumeKnobNode.style.left = `${posAdjustment - 6}px`;\r\n            volumeBarNode.style.width = `${posAdjustment}px`;\r\n            playerTarget.current.setVolume(100 * posAdjustment / volScrollMaxWidth);\r\n        }\r\n    };\r\n\r\n    const handleFrameReady = (evt) => {\r\n        // Note to self: I may need to set more references to playerTarget later; one video had it not updating\r\n        playerTarget.current = evt.target;\r\n        modifyPlayState(true);\r\n        // console.log(\"Player > Initialized\");\r\n    };\r\n\r\n    const handleStateChange = (evt) => {\r\n        const newPlayerState = evt.data;\r\n        // console.log(\"Player > State: \" + playerState + \" => \" + newPlayerState + \", Playing: \" + currPlaying);\r\n\r\n        switch (newPlayerState) {\r\n            case V_PLAY:\r\n                setIntervalId(execNewInterval());\r\n                setMaxVideoDuration(evt.target.getDuration());\r\n                if (!currPlaying) {\r\n                    // Illegal screen interaction\r\n                    evt.target.pauseVideo();\r\n                }\r\n                break;\r\n            case V_PAUSE:\r\n                clearInterval(intervalId);\r\n                if (playerState === V_END) {\r\n                    // Play button's end screen interaction\r\n                    restartVideo();\r\n                }\r\n                else if (currPlaying) {\r\n                    // Illegal screen interaction\r\n                    evt.target.playVideo();\r\n                }\r\n                break;\r\n            case V_END:\r\n                clearInterval(intervalId);\r\n                modifyPlayState(false);\r\n                setCurrVideoDuration(maxVideoDuration);\r\n                props.endObserver(maxVideoDuration);\r\n                break;\r\n            case V_BUFFER:\r\n                clearInterval(intervalId);\r\n                break;\r\n            case V_CUE:\r\n                break;\r\n            case V_UNSTARTED:\r\n                if (!currPlaying) {\r\n                    // Playing searched video after pausing/ending another\r\n                    restartVideo();\r\n                }\r\n                else {\r\n                    // Initializing video upon starting (includes seeking to the current video time and pausing if needed)\r\n                    evt.target.playVideo();\r\n                    if (execOnStart && (props.userCount > 1)) {\r\n                        // Execute \"onStart\" event for multiple user rooms\r\n                        const fallbackNoStart = setInterval(() => {\r\n                            if (evt.target.getPlayerState() === V_PLAY) {\r\n                                evt.target.seekTo(props.startTime + ((new Date()).getTime() - props.offsetExecTime) / 1000, true);\r\n                                setExecOnStart(false);\r\n                                clearInterval(fallbackNoStart);\r\n                            }\r\n                        }, 100);\r\n                    }\r\n                    else if (props.userCount === 1) {\r\n                        // Already executed the \"onStart\" event for single user rooms\r\n                        setExecOnStart(false);\r\n                    }\r\n                    // console.log(\"Player > startTime = \" + props.startTime);\r\n                }\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        evt.target.setLoop(false);\r\n        setPlayerState(newPlayerState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCurrPlaying(props.isPlaying);\r\n    }, [props.isPlaying]);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Player > playerTarget.current = \" + playerTarget.current);\r\n        if (playerTarget.current) {\r\n            const playState = currPlaying;\r\n            // console.log(\"Player > playState = \" + currPlaying);\r\n            if (playState) {\r\n                playerTarget.current.playVideo();\r\n            }\r\n            else {\r\n                playerTarget.current.pauseVideo();\r\n            }\r\n        }\r\n    }, [currPlaying]);\r\n\r\n    useEffect(() => {\r\n        if (props.skipTime) {\r\n            skipToTime(props.skipTime);\r\n        }\r\n    }, [props.skipTime]);\r\n\r\n    return (\r\n        <div className={styles.videoWrapper}>\r\n            <YouTube\r\n              videoId={props.videoId}\r\n              opts={videoOptions}\r\n              onReady={(evt) => handleFrameReady(evt)}\r\n              onStateChange={(evt) => handleStateChange(evt)}\r\n            />\r\n            <div className={cx(styles.controlsBar, styles.unselectable)}>\r\n                <div className={styles.timeNavBar} onClick={(evt) => handleTimeNavClick(evt)}>\r\n                    <ProgressBar className={styles.progressBar} variant=\"danger\" now={currVideoDuration} max={maxVideoDuration} />\r\n                </div>\r\n                <button className={cx(styles.playButton, styles.playerWidget)} onClick={() => modifyPlayState(!currPlaying)}\r\n                  style={{fontSize: (currPlaying ? '19' : '18') + 'px', paddingBottom: (currPlaying ? '0' : '1') + 'px'}}>\r\n                    {currPlaying ? iconPause : iconPlay}\r\n                </button>\r\n                <div className={styles.volumeWidget}>\r\n                    <button className={cx(styles.volumeButton, styles.playerWidget)} onClick={() => setVolScroll(!volScroll)}>\r\n                        <div className={styles.volumeIcon} alt=\"Volume\" draggable=\"false\"\r\n                          onContextMenu={(evt) => {evt.preventDefault()}} />\r\n                    </button>\r\n                    <div className={cx(styles.volumeScrollBarWrapper, styles.playerWidget)} style={{display: volScroll ? 'block' : 'none'}}>\r\n                        <div className={styles.volumeScrollBarBg} />\r\n                        <div id=\"volumeScrBar\" className={styles.volumeScrollBar}\r\n                          onClick={(evt) => handleVolumeKnobDrag(evt)} onMouseDown={(evt) => handleVolumeKnobDrag(evt)} />\r\n                        <div id=\"volumeKnob\" className={styles.volumeScrollBarKnob} draggable=\"true\"\r\n                          onDrag={(evt) => handleVolumeKnobDrag(evt)}\r\n                          onDragEnd={(evt) => handleVolumeKnobDrag(evt)} />\r\n                    </div>\r\n                </div>\r\n                <div className={cx(styles.timeCaption, styles.playerWidget)}>\r\n                    {encodeAsDigitTime(currVideoDuration)} / {encodeAsDigitTime(maxVideoDuration)}\r\n                </div>\r\n                <button className={cx(styles.fullScreenButton, styles.playerWidget)} onClick={() => putFullScreen()}>\r\n                    &#x26F6;\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer;","import React, { useEffect, useState } from 'react';\r\nimport styles from './ChatMessage.module.css';\r\n\r\nfunction ChatMessage(props) {\r\n    const [content, setContent] = useState(\"\");\r\n    const MAX_CONTENT_LENGTH = 256;\r\n\r\n    const padStart = (paramString, paramChar, paramMaxLen) => {\r\n        // padStart: IE (all versions) compatibility\r\n        let padding = \"\";\r\n        for (let charCount = 0; charCount < (paramMaxLen - paramString.length); charCount++) {\r\n            padding += paramChar;\r\n        }\r\n        return padding + paramString;\r\n    }\r\n\r\n    const getTimeStamp = (paramDateArr) => {\r\n        return paramDateArr.map(intvl => padStart(`${intvl}`, '0', 2)).join(':');\r\n    }\r\n\r\n    const formatBold = (paramMessage) => {\r\n        let messageArr = [];\r\n        let paramMessageArr = (\" \" + paramMessage).split('*');\r\n        paramMessageArr[0] = paramMessageArr[0].substring(1);\r\n\r\n        for (let partInd = 0; partInd < paramMessageArr.length; partInd++) {\r\n            if (partInd % 2 === 1) {\r\n                messageArr.push(<b key={partInd}>{paramMessageArr[partInd]}</b>);\r\n            }\r\n            else {\r\n                messageArr.push(<span key={partInd}>{paramMessageArr[partInd]}</span>);\r\n            }\r\n        }\r\n        return messageArr;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setContent(props.content.trim().substring(0, MAX_CONTENT_LENGTH));\r\n    }, [props.content]);\r\n\r\n    return (\r\n        <div className={styles.chatMsgBox} style={{backgroundColor: `${props.notice ? \"#f9f2f2\" : \"#f2f2f9\"}`}}>\r\n            {!props.notice ?\r\n            <div className={styles.chatMsgHeader}>\r\n                <span title={`${props.senderDisp}${props.senderReal ? (' (' + props.senderReal + ')') : ''}`} style={{color: `${props.senderIsOwner ? '#a00' : 'black'}`}}>\r\n                    {props.senderDisp}\r\n                </span>\r\n                <span className={styles.chatMsgTimestamp}>\r\n                    {getTimeStamp(props.timestamp)}\r\n                </span>\r\n            </div>\r\n            :\r\n            <div />}\r\n            <div className={styles.chatMsgContent}>\r\n                {props.notice ? formatBold(content) : content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage;","import React, { useEffect, useState } from 'react';\r\nimport ChatMessage from './ChatMessage/ChatMessage';\r\nimport styles from './ChatBox.module.css';\r\nimport cx from 'classnames';\r\n\r\nfunction ChatBox(props) {\r\n    const [dispName, setDispName] = useState(\"\");\r\n    const [realName, setRealName] = useState(\"\");\r\n    const [ownerPriv, setOwnerPriv] = useState(false);\r\n    const [chatInput, setChatInput] = useState(\"\");\r\n\r\n    const sendToBottom = () => {\r\n        const msgBoxNode = document.getElementById(\"msgBoxScrollable\");\r\n        if (msgBoxNode) {\r\n            // Upon adding a message to the message list, scroll to the bottom after all updates (i.e. current chat)\r\n            setTimeout(() => {\r\n                msgBoxNode.scrollTop = msgBoxNode.scrollHeight\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    const handleSend = () => {\r\n        // console.log(`ChatBox > \"${dispName || \"Anonymous\"}\", \"${realName}\", \"${ownerPriv}\"`);\r\n        if (chatInput) {\r\n            props.handleSendMsg(dispName || \"Anonymous\", realName, ownerPriv, chatInput);\r\n            setChatInput(\"\");\r\n        }\r\n    }\r\n\r\n    const renderObjsAsNodes = (paramObjArr) => {\r\n        const chatNodeList = [];\r\n        for (let chatObj of paramObjArr) {\r\n            let newNode = {};\r\n\r\n            if (chatObj.notice) {\r\n                newNode = <ChatMessage notice={true} key={chatObj.key} content={chatObj.content} />;\r\n            }\r\n            else {\r\n                newNode = <ChatMessage notice={false} key={chatObj.key} content={chatObj.content} senderDisp={chatObj.senderDisp} senderReal={chatObj.senderReal} senderIsOwner={chatObj.senderIsOwner} timestamp={chatObj.timestamp} />;\r\n            }\r\n\r\n            chatNodeList.push(newNode);\r\n        }\r\n        return chatNodeList;\r\n    }\r\n\r\n    useEffect(() => {\r\n        sendToBottom();\r\n    }, [props.display, props.msgList]);\r\n\r\n    useEffect(() => {\r\n        setDispName(props.userMetadata.dispName || dispName);\r\n        setRealName(props.userMetadata.realName || realName);\r\n        setOwnerPriv(props.userMetadata.isOwner || ownerPriv);\r\n    }, [props.userMetadata]);\r\n\r\n    return (\r\n        <>\r\n            {props.display ?\r\n            <div className={styles.chatBox}>\r\n                <div className={styles.chatRoomContainer}>\r\n                    <div id=\"msgBoxScrollable\" className={styles.msgBoxContainer}>\r\n                        {renderObjsAsNodes(props.msgList)}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.msgWidgContainer}>\r\n                    <input placeholder=\"Message\" aria-label=\"Message\" className={cx(styles.chatForm, \"form-control\")} onKeyPress={(evt) => {\r\n                        if (evt.which === 13 || evt.keyCode === 13) {\r\n                            handleSend();\r\n                        }\r\n                    }}\r\n                    onChange={(evt) => setChatInput(evt.target.value)} value={chatInput} />\r\n                    <div className={cx(styles.sendButtonWrapper, \"input-group-append\")}>\r\n                        <button type=\"button\" className={cx(styles.sendButton, \"btn btn-light\")} onClick={() => handleSend()}>\r\n                            &#x276F;\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","import React, { useState } from 'react';\r\nimport ChatBox from './ChatBox/ChatBox';\r\nimport styles from './RoomChatFooter.module.css';\r\nimport cx from 'classnames';\r\n\r\nfunction RoomChatFooter(props) {\r\n    const [showChat, setShowChat] = useState(false);\r\n\r\n    const handleSendMsg = (paramSenderDisp, paramSenderReal, paramSenderIsOwner, paramContent) => {\r\n        props.handleSendMsg(paramSenderDisp, paramSenderReal, paramSenderIsOwner, paramContent);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className={styles.chatBar}>\r\n                <div className={styles.chatBarContainer}>\r\n                    <div className={cx(styles.chatToggleIcon, styles.unselectable)} alt=\"Toggle chat\" title=\"Toggle chat\"\r\n                      draggable=\"false\" onContextMenu={(evt) => {evt.preventDefault()}} onClick={() => setShowChat(!showChat)} />\r\n                    <ChatBox display={showChat} userMetadata={props.userMetadata} msgList={props.msgList} handleSendMsg={handleSendMsg} />\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RoomChatFooter;","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport RoomNavbar from './RoomNavbar/RoomNavbar';\r\nimport VideoPicker from './VideoPicker/VideoPicker';\r\nimport VideoPlayer from './VideoPlayer/VideoPlayer';\r\nimport RoomChatFooter from './RoomChatFooter/RoomChatFooter';\r\nimport Footer from '../Footer/Footer';\r\nimport queryString from 'query-string';\r\nimport urlChecker from 'is-url';\r\nimport styles from './Room.module.css';\r\nimport axios from 'axios';\r\nimport io from \"socket.io-client\";\r\nimport { JOIN_ROOM, REQ_VIDEO, END_VIDEO, SET_VID, RESP_MSG, SEND_MSG, SET_MSGS, UPD_MSGS, GET_VTIME, SET_VTIME, NAV_VTIME, GET_USERS, SET_PLAY, SEND_NTCE } from '../../Constants';\r\n\r\n\r\n\r\nfunction Room(props) {\r\n\r\n    /* === States & Constants === */\r\n    const roomSocket = useRef(null);\r\n    const [startTime, setStartTime] = useState(0);\r\n    const [skipTime, setSkipTime] = useState(0);\r\n    const [currVideoTime, setCurrVideoTime] = useState(0);\r\n    const [roomUserCount, setRoomUserCount] = useState(0);\r\n    const [offsetExecTime, setOffsetExecTime] = useState((new Date()).getTime());\r\n    const [roomVideo, setRoomVideo] = useState(\"\");\r\n    const [userMetadata, setUserMetadata] = useState({});\r\n    const [playVideo, setPlayVideo] = useState(false);\r\n    const [isUserAllowed, setIsUserAllowed] = useState(false);\r\n    const [videoResults, setVideoResults] = useState([]);\r\n    const [msgList, setMsgList] = useState([]);\r\n    const INITIAL_VIDEO_ID = \"bfpPArfDTGw\";\r\n    const MAX_CHAT_MESSAGES = 100;\r\n\r\n    /*\r\n    This function appends a message to the message list, simulating a \"send\".\r\n    */\r\n    const sendMessage = (paramSenderDisp, paramSenderReal, paramSenderIsOwner, paramContent, paramMsgList) => {\r\n        const newMsgTime = new Date();\r\n        const newMsgNode = {\r\n            notice: false,\r\n            content: paramContent,\r\n            key: newMsgTime.getTime(),\r\n            senderDisp: paramSenderDisp,\r\n            senderReal: paramSenderReal,\r\n            senderIsOwner: paramSenderIsOwner,\r\n            timestamp: [newMsgTime.getHours(), newMsgTime.getMinutes(), newMsgTime.getSeconds()]\r\n        };\r\n        \r\n        // <ChatMessage senderDisp={paramSenderDisp} senderReal={paramSenderReal} senderIsOwner={paramSenderIsOwner} content={paramContent} timestamp={newMsgTime} key={newMsgTime.getTime()} />;\r\n        appendMsgNode(newMsgNode, paramMsgList);\r\n    }\r\n\r\n    /*\r\n    This function appends a notice to the message list, simulating a \"send\".\r\n    */\r\n    const sendNotice = (paramContent, paramMsgList) => {\r\n        const newNoticeTime = new Date();\r\n        const newNoticeNode = {\r\n            notice: true,\r\n            content: paramContent,\r\n            key: newNoticeTime.getTime()\r\n        };\r\n        \r\n        // <ChatMessage notice={true} content={paramContent} key={newNoticeTime.getTime()} />;\r\n        appendMsgNode(newNoticeNode, paramMsgList);\r\n    }\r\n\r\n    /*\r\n    This callback function appends a message node to the message list, while keeping the maximum chat messages.\r\n    */\r\n    const appendMsgNode = (paramNode, paramMsgList) => {\r\n        let newMsgList = paramMsgList;\r\n        if (newMsgList.length >= MAX_CHAT_MESSAGES) {\r\n            newMsgList.shift();\r\n        }\r\n        newMsgList = newMsgList.concat([paramNode]);\r\n        roomSocket.current.emit(UPD_MSGS, { newMsgList: newMsgList });\r\n        setMsgList(newMsgList);\r\n    }\r\n    \r\n    /*\r\n    This function automatically handles browser unloading of the Room.\r\n    */\r\n    window.onbeforeunload = () => {\r\n        roomSocket.current.close();\r\n    }\r\n\r\n    /*\r\n    This function tracks the current time of the played video.\r\n    */\r\n    const handleTimeTrack = (paramCurrVideoTime) => {\r\n        // console.log(\"Room: \" + paramCurrVideoTime + \", currently (but untrust): \" + currVideoTime);\r\n        setCurrVideoTime(paramCurrVideoTime);\r\n    }\r\n\r\n    /*\r\n    This function tracks the playing state of the video frame. Expects a boolean value for whether the video is being played.\r\n    */\r\n    const handlePlayTrack = (paramPlayVideo) => {\r\n        setPlayVideo(paramPlayVideo);\r\n    }\r\n\r\n    /*\r\n    This function tracks any skips which occur in the socket. Expects a parameter being a value between 0 and the video's length.\r\n    */\r\n    const handleSkipTrack = (paramSkipTime) => {\r\n        // console.log(\"Room > Skip to: \" + paramSkipTime)\r\n        setSkipTime(paramSkipTime);\r\n    }\r\n\r\n    /*\r\n    This function handles the end of a video and reproduces the ending throughout the entire socket. Expects a parameter value being the video's length.\r\n    */\r\n    const handleVideoEnd = (paramEndTime) => {\r\n        roomSocket.current.emit(END_VIDEO, {\r\n            endTime: paramEndTime\r\n        });\r\n    }\r\n\r\n    /*\r\n    This function handles a click of a video card, playing that selected video for all others in the socket.\r\n    */\r\n    const handleCardClick = (paramVideoId) => {\r\n        roomSocket.current.emit(REQ_VIDEO, { query: paramVideoId });\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    /*\r\n    This function handles a sent message from one client, which is then sent to all others in the socket.\r\n    */\r\n    const handleSendMsg = (paramSenderDisp, paramSenderReal, paramSenderIsOwner, paramContent) => {\r\n        roomSocket.current.emit(SEND_MSG, { senderDisp: paramSenderDisp, senderReal: paramSenderReal, senderIsOwner: paramSenderIsOwner, msgContent: paramContent, currMsgList: msgList });\r\n    }\r\n\r\n    /*\r\n    This function tracks search bar states from the child RoomNavbar and delivers them here to handle.\r\n    Also handles the search bar query (\"queryInput\") from the user (\"userMetadata\"), emitting the video to all socket users.\r\n    */\r\n    const handleNavbarInput = async (paramQueryInput) => {\r\n        paramQueryInput = paramQueryInput.trim();\r\n        \r\n        if (paramQueryInput) {\r\n\r\n            // Extract URL if possible\r\n            let urlExtractor = document.createElement('a');\r\n            urlExtractor.href = paramQueryInput;\r\n            const inputHostnameParts = urlExtractor.hostname.split('.');\r\n            const inputQueryParameters = queryString.parse(urlExtractor.search);\r\n            // console.log(urlChecker(paramQueryInput) + \":\" + inputHostnameParts.includes('youtube') + \":\" + inputQueryParameters.v);\r\n\r\n            if (urlChecker(paramQueryInput) && inputHostnameParts.includes('youtube') && inputQueryParameters.v) {\r\n                // Using a trick with sourcing video ID thumbnail to check if the ID is valid (credits: tonY1883)\r\n                var img = new Image();\r\n                img.src = \"http://img.youtube.com/vi/\" + inputQueryParameters.v + \"/mqdefault.jpg\";\r\n                img.onload = () => {\r\n                    if (img.width !== 120) {\r\n                        // REQ_VIDEO for every YouTube direct link query\r\n                        roomSocket.current.emit(REQ_VIDEO, { query: inputQueryParameters.v });\r\n                    }\r\n                    else if (inputQueryParameters.v) {\r\n                        // On invalid video queries (query is also case-sensitive here)\r\n                        getYTQuerySearch(inputQueryParameters.v);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Youtube API: GET request for search with query \r\n                getYTQuerySearch(paramQueryInput);\r\n            }\r\n        }\r\n        else {\r\n            setVideoResults([]);\r\n        }\r\n    }\r\n\r\n    /*\r\n    This function asynchronously requests the YouTube search of some query input, setting the video results of Room if possible.\r\n    */\r\n    const getYTQuerySearch = async (paramQueryInput) => {\r\n        await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n            params: {\r\n                key: process.env.REACT_APP_YT_SECRET,\r\n                q: paramQueryInput,\r\n                maxResults: 50,\r\n                part: 'snippet',\r\n                type: 'video',\r\n                videoEmbeddable: 'true'\r\n            }})\r\n            .then(res => {\r\n                if (res.data && res.data.items) {\r\n                    const searchResultsArr = res.data.items;\r\n                    setVideoResults(searchResultsArr);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    /*\r\n    This callback function handles the events of the initial socket.\r\n    */\r\n    const handleSocket = useCallback((socket, creds) => {\r\n        roomSocket.current = socket;\r\n\r\n        socket.on('connect', async () => {\r\n\r\n            setOffsetExecTime((new Date()).getTime());\r\n\r\n            let realName = \"\";\r\n            let dispName = \"\";\r\n            let isOwner = false;\r\n            await axios.post(process.env.REACT_APP_API_URL + \"/api/rooms/userinfo\", {roomCode: creds.roomCode, userId: creds.userId})\r\n                .then(resUserObject => {\r\n                    if (resUserObject && resUserObject.data) {\r\n                        realName = resUserObject.data.realName;\r\n                        dispName = resUserObject.data.dispName;\r\n                        isOwner = resUserObject.data.isOwner;\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n            setUserMetadata({realName: realName, dispName: dispName, isOwner: isOwner});\r\n            // console.log(`Room > {roomCode: ${creds.roomCode}, userId: ${creds.userId}, realName: ${realName}, dispName: ${dispName}, isOwner: ${isOwner}}`);\r\n\r\n            if (dispName) {\r\n                // Somebody joined the room; has a real name, display name, and some privileges\r\n                socket.emit(JOIN_ROOM, {\r\n                    roomId: creds.roomCode,\r\n                    userId: creds.userId,\r\n                    realName: realName,\r\n                    dispName: dispName,\r\n                    isOwner: isOwner\r\n                });\r\n                socket.emit(GET_USERS);\r\n                socket.emit(SEND_NTCE, { msgContent: `*${dispName + (realName ? (\" (\" + realName + \")\") : \"\")}* has joined the room.` });\r\n            }\r\n            else {\r\n                // Return to /rooms if anonymous (i.e. this person does not have a cookie)\r\n                window.location.pathname = \"/rooms\";\r\n            }\r\n        });\r\n\r\n        socket.on(END_VIDEO, (data) => {\r\n            setSkipTime(data.endTime);\r\n        });\r\n\r\n        socket.on(SET_VID, (data) => {\r\n            if (data.respVideo) {\r\n                setRoomVideo(data.respVideo);\r\n            }\r\n            if (data.respVideoTime) {\r\n                setStartTime(data.respVideoTime);\r\n            }\r\n        });\r\n\r\n        socket.on(GET_USERS, (data) => {\r\n            if (data.userCount) {\r\n                // console.log(\"User Count: \" + data.userCount);\r\n                setRoomUserCount(data.userCount);\r\n            }\r\n        });\r\n\r\n        socket.on(SET_PLAY, (data) => {\r\n            if (data.playVideo !== undefined) {\r\n                setPlayVideo(data.playVideo);\r\n            }\r\n        });\r\n\r\n        socket.on(NAV_VTIME, (data) => {\r\n            if (data.newTime !== undefined) {\r\n                // console.log(\"Room > NAV_VTIME (recv): newTime = \" + data.newTime);\r\n                setSkipTime(data.newTime);\r\n            }\r\n        });\r\n\r\n        socket.on(RESP_MSG, (data) => {\r\n            // console.log(data.respJoin);\r\n        });\r\n\r\n        socket.on(SEND_MSG, (data) => {\r\n            sendMessage(data.senderDisp, data.senderReal, data.senderIsOwner, data.msgContent, data.currMsgList);\r\n        });\r\n\r\n        socket.on(SEND_NTCE, (data) => {\r\n            sendNotice(data.msgContent, data.currMsgList);\r\n        });\r\n\r\n        socket.on(SET_MSGS, (data) => {\r\n            setMsgList(data.currMsgList ? data.currMsgList : []);\r\n        });\r\n    }, [props.room.match.params.code]);\r\n\r\n    /*\r\n    This useEffect function is called at the start, initializing the Room's video ID and the component is re-rendered.\r\n    */\r\n    useEffect(() => {\r\n        if (!roomVideo) {\r\n            // Initialize a playing video if the Room does not contain a video yet\r\n            // console.log(\"Room > setRoomVideo: videoId = \" + (roomSocket.current ? roomSocket.current.videoId : INITIAL_VIDEO_ID));\r\n            setRoomVideo(roomSocket.current ? roomSocket.current.videoId : INITIAL_VIDEO_ID);\r\n        }\r\n    }, [roomVideo]);\r\n\r\n    /*\r\n    This useEffect function is called when the time navigation bar is interacted with; socket video time will then be changed.\r\n    */\r\n    useEffect(() => {\r\n        const socket = roomSocket.current || io(process.env.REACT_APP_API_URL);\r\n        // console.log(\"Room > NAV_VTIME (sent): newTime = \" + skipTime);\r\n        socket.emit(NAV_VTIME, {\r\n            newTime: skipTime\r\n        });\r\n    }, [skipTime]);\r\n\r\n    /*\r\n    This useEffect function updates sets the current video time in the server every time it is updated here.\r\n    */\r\n    useEffect(() => {\r\n        const socket = roomSocket.current || io(process.env.REACT_APP_API_URL);\r\n        socket.off(GET_VTIME);\r\n        socket.on(GET_VTIME, () => {\r\n            // console.log(\"Room > GET_VTIME: currVideoTime = \" + currVideoTime);\r\n            socket.emit(SET_VTIME, {\r\n                currVideoTime: currVideoTime\r\n            });\r\n        });\r\n    }, [currVideoTime]);\r\n\r\n    /*\r\n    This useEffect function runs the \"playVideo\" state throughout the entire socket.\r\n    */\r\n    useEffect(() => {\r\n        const socket = roomSocket.current || io(process.env.REACT_APP_API_URL);\r\n        socket.emit(SET_PLAY, {\r\n            playVideo: playVideo\r\n        });\r\n    }, [playVideo]);\r\n\r\n    /*\r\n    This useEffect function is called at the start, handling passed properties into the Room, setting up the socket, and validating the user session.\r\n    */\r\n    useEffect(() => {\r\n        \r\n        const setupRoom = async () => {\r\n            // Room Token Verification & Handling\r\n            const resRoomSession = await axios.post(process.env.REACT_APP_API_URL + \"/api/users/roomauth/verify\");\r\n            const foundRoomCode = props.room.match.params.code || \"\";\r\n            if (!resRoomSession.data || !foundRoomCode || (resRoomSession.data.roomCode !== foundRoomCode)) {\r\n                window.location.href = \"/\";\r\n                return;\r\n            }\r\n            \r\n            // ID -> User Properties\r\n            const foundSessId = resRoomSession.data.id || \"\";\r\n            // console.log({roomCode: foundRoomCode, userId: foundSessId, realName: realName, dispName: dispName, isOwner: isOwner});\r\n\r\n            // Socket.IO Implementation\r\n            const socket = io(process.env.REACT_APP_API_URL) || roomSocket.current;\r\n            handleSocket(socket, {roomCode: foundRoomCode, userId: foundSessId});\r\n            setIsUserAllowed(true);\r\n        }\r\n        setupRoom();\r\n\r\n    }, [handleSocket, props.room.match.params.code]);\r\n\r\n    /*\r\n    This return function simulates the entire room: a sticky video \"search bar\", \"video player\", \"room chat\", and \"user list\" are all created sub-components which make up this page.\r\n    */\r\n    return (\r\n        <>\r\n            {isUserAllowed ?\r\n            <>\r\n                <RoomNavbar searchHandler={handleNavbarInput} />\r\n                <div className={styles.videoPlayerWrapper}>\r\n                    <div className={styles.videoPlayer}>\r\n                        <VideoPlayer\r\n                          videoId={roomVideo}\r\n                          isPlaying={playVideo}\r\n                          offsetExecTime={offsetExecTime}\r\n                          startTime={startTime}\r\n                          skipTime={skipTime}\r\n                          userCount={roomUserCount}\r\n                          timeHandler={handleTimeTrack}\r\n                          playHandler={handlePlayTrack}\r\n                          skipHandler={handleSkipTrack}\r\n                          endObserver={handleVideoEnd}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.pickerContainer}>\r\n                    <VideoPicker videoResults={videoResults} clickHandler={handleCardClick} />\r\n                </div>\r\n                <Footer />\r\n                <RoomChatFooter userMetadata={userMetadata} msgList={msgList} handleSendMsg={handleSendMsg} />\r\n            </>\r\n            :\r\n            <div />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Room;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nimport { Navbar, AboutBox, TWidgetBox, SignUpWindow, LogInWindow, SessionResetModal, TermsBox, Footer, Room } from './components';\n\nfunction MainWrapper() {\n    return (\n        <Router>\n            <SessionResetModal />\n            \n            <Route exact path='/' render={() =>\n                <div>\n                    <Navbar />\n                    <AboutBox />\n                    <Footer />\n                </div>\n            } />\n            <Route exact path='/rooms' render={() =>\n                <div>\n                    <Navbar />\n                    <TWidgetBox />\n                    <Footer />\n                </div>\n            } />\n            <Route exact path='/rooms/:code' render={(props) =>\n                <div>\n                    <Room room={props} />\n                </div>\n            } />\n            <Route exact path='/terms' render={() =>\n                <div>\n                    <Navbar />\n                    <TermsBox />\n                    <Footer />\n                </div>\n            } />\n            <Route exact path='/login' render={() =>\n                <div>\n                    <LogInWindow />\n                    <Footer />\n                </div>\n            } />\n            <Route exact path='/signup' render={() =>\n                <div>\n                    <SignUpWindow />\n                    <Footer />\n                </div>\n            } />\n\n        </Router>\n    );\n}\n\nexport default MainWrapper;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"LogInWindow_unselectable__U5qXL\",\"logInWrap\":\"LogInWindow_logInWrap__3fL3z\",\"logInBox\":\"LogInWindow_logInBox__mo257\",\"iconContainer\":\"LogInWindow_iconContainer__3puOw\",\"iconHelper\":\"LogInWindow_iconHelper__2p9L9\",\"icon\":\"LogInWindow_icon__21CJA\",\"iconTextContainer\":\"LogInWindow_iconTextContainer__3m7xE\",\"formWrapper\":\"LogInWindow_formWrapper__Hsqg_\",\"formInputSeparator\":\"LogInWindow_formInputSeparator__1-b9A\",\"formInput\":\"LogInWindow_formInput__1Oo1_\",\"formCheckSubContainer\":\"LogInWindow_formCheckSubContainer__1ZsIW\",\"checkboxContainer\":\"LogInWindow_checkboxContainer__l8Ey4\",\"logInContainer\":\"LogInWindow_logInContainer__2x3jE\",\"logInButton\":\"LogInWindow_logInButton__1_0Zy\",\"errorMessage\":\"LogInWindow_errorMessage__26Fof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roomBar\":\"RoomNavbar_roomBar__3ImNE\",\"roomBarContainer\":\"RoomNavbar_roomBarContainer__2usAn\",\"roomBarContent\":\"RoomNavbar_roomBarContent__158g6\",\"unselectable\":\"RoomNavbar_unselectable__3dmrC\",\"navLeft\":\"RoomNavbar_navLeft__2ccTU\",\"navRight\":\"RoomNavbar_navRight__3XA6X\",\"navCenter\":\"RoomNavbar_navCenter__3zXac\",\"barWrapper\":\"RoomNavbar_barWrapper__3689s\",\"barInputGroup\":\"RoomNavbar_barInputGroup__3Cgov\",\"searchForm\":\"RoomNavbar_searchForm__3W4Dk\",\"searchButton\":\"RoomNavbar_searchButton__2ky6e\"};","module.exports = {\r\n    V_UNSTARTED: -1,\r\n    V_END: 0,\r\n    V_PLAY: 1,\r\n    V_PAUSE: 2,\r\n    V_BUFFER: 3,\r\n    V_CUE: 5\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBox\":\"ChatBox_chatBox__1pmPO\",\"chatRoomContainer\":\"ChatBox_chatRoomContainer__1nhsO\",\"msgBoxContainer\":\"ChatBox_msgBoxContainer__wxb3Y\",\"msgWidgContainer\":\"ChatBox_msgWidgContainer__3q61u\",\"chatForm\":\"ChatBox_chatForm__18cTW\",\"sendButtonWrapper\":\"ChatBox_sendButtonWrapper__1zlPs\",\"sendButton\":\"ChatBox_sendButton__1dgaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSeparator\":\"JoinRoomModal_formSeparator__1a8G7\",\"contentContainer\":\"JoinRoomModal_contentContainer__2EBUL\",\"contentBox\":\"JoinRoomModal_contentBox__2UIhj\",\"closeButton\":\"JoinRoomModal_closeButton__SL3WV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"VideoCard_unselectable__3B8Fk\",\"videoCard\":\"VideoCard_videoCard__3Iwmj\",\"videoTitleWrapper\":\"VideoCard_videoTitleWrapper__3yi9t\",\"videoTitleText\":\"VideoCard_videoTitleText__3bHa3\",\"videoAuthorText\":\"VideoCard_videoAuthorText__j9-JD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"CreateRoomButton_unselectable__1PEYH\",\"createButton\":\"CreateRoomButton_createButton__1XHPq\",\"formSeparator\":\"CreateRoomButton_formSeparator__2IVww\",\"closeButton\":\"CreateRoomButton_closeButton__DmNpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__11Inf\",\"termsContainer\":\"Footer_termsContainer__2Oajo\",\"termsWrapper\":\"Footer_termsWrapper__35Ovy\",\"termsAnchor\":\"Footer_termsAnchor__3msoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatMsgBox\":\"ChatMessage_chatMsgBox__2zqKA\",\"chatMsgHeader\":\"ChatMessage_chatMsgHeader__1GqD2\",\"chatMsgContent\":\"ChatMessage_chatMsgContent__2-IIt\",\"chatMsgTimestamp\":\"ChatMessage_chatMsgTimestamp__2JYAi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"RoomChatFooter_unselectable__3jCXU\",\"chatBar\":\"RoomChatFooter_chatBar__lIrs4\",\"chatBarContainer\":\"RoomChatFooter_chatBarContainer__1Gi12\",\"chatToggleIcon\":\"RoomChatFooter_chatToggleIcon__2hcVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoPlayer\":\"Room_videoPlayer__5KNrX\",\"videoPlayerWrapper\":\"Room_videoPlayerWrapper__1R_Tz\",\"pickerContainer\":\"Room_pickerContainer__2_QaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2rXmn\",\"navbarContainer\":\"Navbar_navbarContainer__2R4y_\",\"navIconSeparator\":\"Navbar_navIconSeparator__2jHHd\",\"navSeparator\":\"Navbar_navSeparator__11ywO\",\"unselectable\":\"Navbar_unselectable__3cIyo\",\"navLeft\":\"Navbar_navLeft__1PW1e\",\"navRight\":\"Navbar_navRight__m1hkl\",\"bIcon\":\"Navbar_bIcon__VvXk_\",\"capsule\":\"Navbar_capsule__CxHSI\",\"delayed\":\"Navbar_delayed__1Fb96\",\"sqButton\":\"Navbar_sqButton__2q_1I\",\"bWebsite\":\"Navbar_bWebsite__rOanc\",\"hover\":\"Navbar_hover__Alv7Y\",\"active\":\"Navbar_active__2A6C8\",\"bLogin\":\"Navbar_bLogin__1wKiu\",\"bSignUp\":\"Navbar_bSignUp__ErQyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unselectable\":\"TermsBox_unselectable__1bHOQ\",\"termsboxContainer\":\"TermsBox_termsboxContainer__ZMYFA\",\"separatorTop\":\"TermsBox_separatorTop__di7zG\",\"roomButton\":\"TermsBox_roomButton__bErvY\"};"],"sourceRoot":""}